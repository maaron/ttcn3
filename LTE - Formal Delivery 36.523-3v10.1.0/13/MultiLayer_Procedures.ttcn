/******************************************************************************/
// @copyright   Copyright Notification
//   No part may be reproduced except as authorized by written permission.
//   The copyright and the foregoing restriction extend to reproduction in all media.
//   Trademark 2012, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TTA, TTC).
//   All rights reserved.
// @version: 36.523-3v10.1.0
// $Date: 2012-09-04 15:08:09 +0200 (Tue, 04 Sep 2012) $
// $Rev: 7299 $
/******************************************************************************/

module MultiLayer_Procedures {

  import from EUTRA_RRC_ASN1_Definitions language "ASN.1:1997" all;
  import from CommonDefs all;
  import from CommonIP all;
  import from EPS_NAS_Constants all;
  import from EPS_NAS_MsgContainers all;
  import from EPS_NAS_Templates all;
  import from EPS_NAS_TypeDefs all;
  import from EUTRA_ASP_DrbDefs all;
  import from EUTRA_AspCommon_Templates all;
  import from EUTRA_BandDependentParam all;
  import from EUTRA_CellInfo all;
  import from EUTRA_CommonDefs all;
  import from EUTRA_CommonProcedures all;
  import from EUTRA_Component all;
  import from EUTRA_ConfigurationSteps all;
  import from EUTRA_DRB_Templates all;
  import from EUTRA_LoopBack all;
  import from EUTRA_Measurement_Templates all;
  import from EUTRA_NASSteps all;
  import from EUTRA_RRCSteps all;
  import from EUTRA_RRC_Templates all;
  import from EUTRA_SRB_Templates all;
  import from EUTRA_SecurityFunctions all;
  import from EUTRA_SecuritySteps all;
  import from EUTRA_Timing all;
  import from L2_CommonFunctions all;

  group TC_13_2_1_Templates {

  template (value) DL_DCCH_Message cs_RRCConnectionReconfiguration_13_2_1_Step3(RRC_TransactionIdentifier p_RRC_TI,
                                                                                ARFCN_ValueEUTRA p_EUTRA_DL_CarrierFreq1,
                                                                                AllowedMeasBandwidth p_MeasurementBandwidth1) :=
  /* @status    APPROVED */
    cs_508_RRCConnectionReconfiguration_ConditionMEAS (p_RRC_TI,
                                                       cs_MeasConfig (omit,
                                                                      cs_MeasObjectToAddModList_1Entry (tsc_IdMeasObject_f1,
                                                                                                        cs_MeasObject_measObjectEUTRA_Common (p_EUTRA_DL_CarrierFreq1,
                                                                                                                                              p_MeasurementBandwidth1,
                                                                                                                                              omit,
                                                                                                                                              omit,
                                                                                                                                              omit)),
                                                                      omit,
                                                                      cs_ReportConfigToAddModList_1Entry (1, cs_508_ReportConfigEUTRA_A3),
                                                                      omit,
                                                                      cs_MeasIdToAddModList_1Entry (1, tsc_IdMeasObject_f1, 1),
                                                                      cs_QuantityConfig(cs_QuantityConfigEUTRA (omit, omit), omit, omit, omit ), //@sic R5s100288 sic@
                                                                      omit, //@sic R5s100288 sic@
                                                                      omit,
                                                                      omit,
                                                                      omit));

  template UL_DCCH_Message cr_MeasurementReport_13_2_1_Step6( PhysCellId p_PhysCellId ) :=
    /* @status    APPROVED */
    cr_MeasurementReport(1,
                         ?,
                         ?,
                         cr_MeasResultNeighCells_measResultListEUTRA_1Entry( p_PhysCellId, omit,?, ? ) );

  } // end of group TC_13_2_1_Templates

  function fl_EUTRA_GenericRbEst_DSR_TransMax(EUTRA_CellId_Type p_CellId) runs on EUTRA_PTC
  {
    var template (omit) DRB_ToAddModList v_DRB_ToAddModList := omit;                // => apply default setting acc. 36.508 cl. 4.8.2.1.7 */
    var template (omit) MAC_MainConfig_Type v_MAC_MainConfig := omit;               // => apply default setting acc. 36.508 cl. 4.8.2.1.5 */
    var template (omit) PhysicalConfigDedicated v_PhysicalConfigDedicated := f_PhysicalConfigDedicated_Dsr_TransMax(p_CellId);  // @sic R5s100767 additional changes sic@
    
    f_EUTRA_GenericRbEst_Common( p_CellId,
                                 0,
                                 0,
                                 v_DRB_ToAddModList,
                                 v_MAC_MainConfig,
                                 v_PhysicalConfigDedicated,
                                 omit,
                                 omit );
  }

  function f_TC_13_1_1_EUTRA() runs on EUTRA_PTC
  { /* Activation and deactivation of additional data radio bearer in E-UTRA */

    var RRC_TransactionIdentifier v_RRC_TI := tsc_RRC_TI_Def;
    var template(value) NAS_MSG_Request_Type v_NAS_MSG_Request;
    var template (value) ESM_Cause v_EsmCause36 := cs_ESM_Cause_v ('00100100'B); // "Regular deactivation"  // @sic R5-101118: ESM_Cause sic@
    var ProcedureTransactionIdentifier v_EPS_TI := '00'O;
    var EPS_BearerIdentity v_DedicatedEpsBeareId := tsc_EpsDedicatedBearerId;
    var EPS_BearerIdentity v_LinkedEpsBearerId := tsc_EpsDefaultBearerId;
    var UInt16_Type v_SourcePort := 31160; // @sic R5s100068 sic@ // @sic R5s100135 sic@
    var UInt16_Type v_DestPort := 61000; // @sic R5s100068 sic@ // @sic R5s100135 sic@
    var PDCP_SDUList_Type v_PDCP_SDUList_DRB1 := { f_IPv4IPv6_IcmpEchoReply(f_LoopbackModeB_IP_Address_UE()) };      /* @sic R5s120470 sic@ */
    var octetstring v_AnyUdpPacket;
    var charstring v_IP_Address1_NW;
    var B3_Type v_PdnType;
    var boolean v_UseIPv4;
    
    f_EUTRA_Init ( c1 );
    
    v_NAS_MSG_Request := cs_NAS_Request( tsc_SHT_IntegrityProtected_Ciphered,
                                         cs_508_DeactivateEPSBearerCxtReq( v_DedicatedEpsBeareId,
                                                                           v_EPS_TI,
                                                                           v_EsmCause36 ) ); // @sic R5-101118: ESM_Cause sic@
    //Create and configure cell
    f_EUTRA_CellConfig_DRB_Common ( eutra_Cell1, 1, 0);
    
    /* Preamble The UE is in state Generic RB Established, UE test mode activated (state 3A) according to [18] using the UE TEST LOOP MODE B. */
    f_EUTRA_Preamble ( eutra_Cell1, STATE2A_TESTLOOP_ModeB );
    f_EUTRA_RbEst_Def ( eutra_Cell1 );
    
    f_EUTRA_TestBody_Set ( true, layer2 );  // @sic R5-101050 sic@
    
    //@siclog "Step 1 - 2" siclog@
    /* Step 1: SS transmits an RRCConnectionReconfiguration message to establish a data radio bearer.
     *         The SS transmits a ACTIVATE DEDICATED EPS BEARER CONTEXT REQUEST message activating a new EPS bearer context.
     *         The NAS message is included in a RRCConnectionReconfiguration message.
     * Step 2: The UE transmit a RRCConnectionReconfigurationComplete message to confirm the establishment of data radio bearer. */
    f_EUTRA_TxDedicatedEpsBearerCtxtReq ( eutra_Cell1,
                                          tsc_DRB2,
                                          v_DedicatedEpsBeareId,
                                          v_EPS_TI,
                                          cs_LinkedId(hex2bit( v_LinkedEpsBearerId)),
                                          cs_508_EPS_QoS_Dedicated_1, // According to Context#1 in TS 36.508
                                          f_EUTRA_Get_508_TrafficFlowTemplate(1) ); // According to Context#1 in TS 36.508
    
    //@siclog "Step 3" siclog@
    /* The UE transmits an ACTIVATE DEDICATE EPS BEARER CONTEXT ACCEPT message. */
    SRB.receive ( car_SRB2_NasPdu_IND( eutra_Cell1,
                                       cr_NAS_Indication( tsc_SHT_IntegrityProtected_Ciphered,
                                                          cr_508_ActDedicatedEPSBearerCxtAccept ( v_DedicatedEpsBeareId ) ) ) );
    
    //@siclog "Step 4" siclog@
    /* The SS closes the UE test loop mode. */
    f_EUTRA_CloseUE_TestLoopModeB ( eutra_Cell1, '00'O );
    
    //@siclog "Step 5" siclog@
    /* The SS transmits one IP packet to the UE on the DRB associated with the default EPS bearer context. */
    DRB.send(cas_DRB_COMMON_REQ_PDCP_SDU(eutra_Cell1, tsc_RbId_DRB1, cs_TimingInfo_Now, v_PDCP_SDUList_DRB1));     /* @sic R5s120470 sic@ */
    
    //@siclog "Step 6" siclog@
    /* Check: Does the UE loop back the IP packet on the DRB associated with the default EPS bearer context? */
    DRB.receive(car_DRB_COMMON_IND_PDCP_SDUList(eutra_Cell1, tsc_RbId_DRB1, ?, v_PDCP_SDUList_DRB1));              /* @sic R5s120470 sic@ */
    f_EUTRA_PreliminaryPass(__FILE__, __LINE__, "Test Case 13.1.1 Step 6");
    
    //Check PDN type and select IP version accordingly
    v_PdnType := f_EUTRA_MobileInfo_GetAssignedPdnType();
    v_UseIPv4 := (v_PdnType == tsc_PdnType_IPv4);  /* @sic R5-112600: clarification to conditions for IP address configuration sic@ */
    v_IP_Address1_NW := f_LoopbackModeB_IP_Address_NW(v_UseIPv4);      /* @sic R5s120470 sic@ */
    v_AnyUdpPacket := f_IPv4IPv6_AnyUdpPacket(v_IP_Address1_NW, v_IP_Address1_NW, v_SourcePort, v_DestPort);         /* @sic R5s120470 sic@ */
    
    //@siclog "Step 7" siclog@
    /* The SS transmits one IP packet to the UE on the DRB associated with the dedicated EPS bearer context. */
    DRB.send ( cas_DRB_COMMON_REQ_PDCP_SDU ( eutra_Cell1,
                                             tsc_RbId_DRB2,
                                             cs_TimingInfo_Now,
                                             { v_AnyUdpPacket } ) ); // @sic R5s100135 sic@
    
    //@siclog "Step 8" siclog@
    /* Check: Does the UE loop back the IP packet on the DRB associated with the dedicated EPS bearer context? */
    DRB.receive ( car_DRB_COMMON_IND_PDCP_SDUList ( eutra_Cell1,
                                                    tsc_RbId_DRB2,
                                                    ?,
                                                    { v_AnyUdpPacket } ) ); // @sic R5s100135 sic@
    
    f_EUTRA_PreliminaryPass(__FILE__, __LINE__, "Test Case 13.1.1 Step 8");
    
    //@siclog "Step 9" siclog@
    /*         SS transmits an RRCConnectionReconfiguration message to release a data radio bearer.
     *         The SS transmits a DEACTIVATE EPS BEARER CONTEXT REQUEST including the EPS bearer identity of the dedicated EPS bearer.
     *         The NAS message is included in a RRCConnectionReconfiguration message. */
    SRB.send ( cas_SRB1_RrcNasPdu_REQ ( eutra_Cell1,
                                        cs_TimingInfo_Now,
                                        cs_RRCConnectionReconfiguration_DRB_Release ( v_RRC_TI, tsc_DRB2 ),
                                        v_NAS_MSG_Request ) );
    
    //@siclog "Step 10" siclog@
    /* The UE transmits an RRCConnectionReconfigurationComplete message. */
    SRB.receive ( car_SRB1_RrcPdu_IND ( eutra_Cell1, cr_508_RRCConnectionReconfigurationComplete ( v_RRC_TI ) ) );
    
    //@siclog "Step 11" siclog@
    /* The UE transmit a DEACTIVATE EPS BEARER CONTEXT ACCEPT. */
    SRB.receive ( car_SRB2_NasPdu_IND ( eutra_Cell1,
                                        cr_NAS_Indication ( tsc_SHT_IntegrityProtected_Ciphered,
                                                            cr_508_DeactivateEPSBearerCxtAccept ( v_DedicatedEpsBeareId ) ) ) );
    
    //@siclog "Step 12" siclog@
    /* The SS transmits one IP packet to the UE on the DRB associated with the default EPS bearer context. */
    DRB.send(cas_DRB_COMMON_REQ_PDCP_SDU(eutra_Cell1, tsc_RbId_DRB1, cs_TimingInfo_Now, v_PDCP_SDUList_DRB1));     /* @sic R5s120470 sic@ */

    //@siclog "Step 13" siclog@
    /* Check: Does the UE loop back the IP packet on the DRB associated with the default EPS bearer context? */
    DRB.receive(car_DRB_COMMON_IND_PDCP_SDUList(eutra_Cell1, tsc_RbId_DRB1, ?, v_PDCP_SDUList_DRB1));              /* @sic R5s120470 sic@ */
    f_EUTRA_PreliminaryPass(__FILE__, __LINE__, "Test Case 13.1.1 Step 13");
    
    f_EUTRA_TestBody_Set ( false );
    
    /* Postamble */
    f_EUTRA_Postamble ( eutra_Cell1, E3_TESTMODE ); //@sic R5-103875 sic@
  }

  function f_TC_13_2_1_EUTRA() runs on EUTRA_PTC
  { /* RRC Connection Reconfiguration; E-UTRA to E-UTRA */
    var template (value) CellPowerList_Type v_CellPowerList_AtT0;
    var template (value) CellPowerList_Type v_CellPowerList_AtT1;
    var PhysCellId v_PhysCellId_Cell1;
    var PhysCellId v_PhysCellId_Cell2;
    var Frequency_IE_Type v_Frequency_IE_f1;
    var ChannelBandwidthDependency_Type v_ChBandDependency_f1;
    var PDCP_SDUList_Type v_PDCP_SDUList_DRB1;

    var default v_DefaultRef;

    f_EUTRA_Init ( c2 );

    v_PhysCellId_Cell1 := f_EUTRA_CellInfo_GetPhyCellId( eutra_Cell1 );
    v_PhysCellId_Cell2 := f_EUTRA_CellInfo_GetPhyCellId( eutra_Cell2 );

    v_Frequency_IE_f1 := f_EUTRA_CellInfo_GetFrequencyIEs( eutra_Cell1 );

    v_ChBandDependency_f1 := f_EUTRA_BandDependentParam( v_Frequency_IE_f1.DL_ChBandwidth, v_Frequency_IE_f1.UL_ChBandwidth );

    //Create and configure cells
    f_EUTRA_CellConfig_Def ( eutra_Cell1 );
    f_EUTRA_CellConfig_Def ( eutra_Cell2 );

    /* Preamble The UE is in state Loopback Activated (state 4) on Cell 1 according to [18] using the UE TEST LOOP MODE B. */
    f_EUTRA_Preamble ( eutra_Cell1, STATE2A_TESTLOOP_ModeB );
    f_EUTRA_RbEst_Def ( eutra_Cell1 );
    f_EUTRA_CloseUE_TestLoopModeB ( eutra_Cell1, '00'O );

    //Set initial cell power levels
    v_CellPowerList_AtT0 := {
      cs_CellPower ( eutra_Cell1, -85 ),
      cs_CellPower ( eutra_Cell2, -91 )
    };
    f_EUTRA_SetCellPowerList ( v_CellPowerList_AtT0 );

    f_EUTRA_TestBody_Set ( true, layer2 );

    //@siclog "Step 1" siclog@
    /* The SS transmits one IP packet to the UE on the DRB associated with the default EPS bearer context on Cell 1. */
    v_PDCP_SDUList_DRB1 := { f_IPv4IPv6_IcmpEchoReply(f_LoopbackModeB_IP_Address_UE()) };      /* @sic R5s120470 sic@ */
    DRB.send(cas_DRB_COMMON_REQ_PDCP_SDU(eutra_Cell1, tsc_RbId_DRB1, cs_TimingInfo_Now, v_PDCP_SDUList_DRB1));     /* @sic R5s120470 sic@ */

    //@siclog "Step 2" siclog@
    /* Check: Does the UE loop back the IP packet on the DRB associated with the default EPS bearer context on Cell 1? */
    DRB.receive(car_DRB_COMMON_IND_PDCP_SDUList(eutra_Cell1, tsc_RbId_DRB1, ?, v_PDCP_SDUList_DRB1));              /* @sic R5s120470 sic@ */
    f_EUTRA_PreliminaryPass(__FILE__, __LINE__, "Test Case 13.2.1 Step 2");

    //@siclog "Step 3-4" siclog@
    //@sic R5s110743 sic@
    f_EUTRA_RRCConnectionReconfiguration_MeasConfig( eutra_Cell1,
                                                     cs_RRCConnectionReconfiguration_13_2_1_Step3 ( tsc_RRC_TI_Def,
                                                                                                    v_Frequency_IE_f1.UL_DL_Earfcn.dl_CarrierFreq,
                                                                                                    v_ChBandDependency_f1.AllowedMeasBandwidth ) );
    
    //@siclog "Step 5" siclog@
    /* The SS changes Cell 1 and Cell 2 parameters according to the row "T1" in table 13.2.1.3.2-1 */
    v_CellPowerList_AtT1 := {
      cs_CellPower ( eutra_Cell1, -91 ),
      cs_CellPower ( eutra_Cell2, -85 )
    };
    f_EUTRA_SetCellPowerList ( v_CellPowerList_AtT1 );
    
    //@siclog "Step 6" siclog@
    /* The UE transmits a MeasurementReport message on Cell 1 to report event A3 with the measured RSRP and RSRQ value for Cell 2. */
    SRB.receive( car_SRB1_RrcPdu_IND( eutra_Cell1,
                                      cr_MeasurementReport_13_2_1_Step6 ( v_PhysCellId_Cell2 ) ) );
    
    //Activate the default to receive periodical reports for Cell2.
    v_DefaultRef := activate( a_EUTRA_AddDefault_PeriodicalMeasurmentReport( eutra_Cell1,
                                                                             cr_MeasurementReport_13_2_1_Step6 ( v_PhysCellId_Cell2 ) ) );

    //PDCP count shall be kept in PDCP re-establishment for AM DRB
    //f_EUTRA_SS_PdcpCount_Handover ( eutra_Cell1, eutra_Cell2, { tsc_DRB1 } ); //@sic R5s100288, R5-120721 change 7: f_EUTRA_SS_PdcpCount_Handover is done by f_EUTRA_508RRC_IntraLTE_HO_InterCell sic@

    //@siclog "Step 7 - 8" siclog@
    /* The SS transmits an RRCConnectionReconfiguration message on Cell 1 to order the UE to perform intra frequency handover to Cell 2. */
    /* The UE transmit an RRCConnectionReconfigurationComplete message on Cell 2 to confirm the successful completion of the intra frequency handover. */
    f_EUTRA_508RRC_IntraLTE_HO_InterCell ( eutra_Cell1, eutra_Cell2 ); //@sic R5s100288 R5s100430 R5s100524 sic@

    //Deactivate the default to stop receiving periodical Measurement Report
    deactivate( v_DefaultRef );

    //@siclog "Step 9" siclog@
    /* The SS transmits one IP packet to the UE on the DRB associated with the default EPS bearer context on Cell 2. */
    v_PDCP_SDUList_DRB1 := { f_IPv4IPv6_IcmpEchoReply(f_LoopbackModeB_IP_Address_UE(), -, 2) };                /* @sic R5s120470 sic@ */
    DRB.send(cas_DRB_COMMON_REQ_PDCP_SDU(eutra_Cell2, tsc_RbId_DRB1, cs_TimingInfo_Now, v_PDCP_SDUList_DRB1)); /* @sic R5s120470 sic@ */

    //@siclog "Step 10" siclog@
    /* Check: Does the UE loop back the IP packet on the DRB associated with the default EPS bearer context on Cell 2? */
    DRB.receive(car_DRB_COMMON_IND_PDCP_SDUList(eutra_Cell2, tsc_RbId_DRB1, ?, v_PDCP_SDUList_DRB1));          /* @sic R5s120470 sic@ */
    f_EUTRA_PreliminaryPass(__FILE__, __LINE__, "Test Case 13.2.1 Step 10");

    f_EUTRA_TestBody_Set ( false );

    /* Postamble */
    f_EUTRA_Postamble ( eutra_Cell2, E3_TESTMODE );
  }

  function f_TC_13_3_1_1_EUTRA() runs on EUTRA_PTC
  { /* Intra System Connection Reestablishment / Radio Link Recovery while T310 is running */

    var SubFrameTiming_Type v_TimingInfo;
    var PDCP_SDUList_Type v_PDCP_SDUList_DRB1 := { f_IPv4IPv6_IcmpEchoReply(f_LoopbackModeB_IP_Address_UE()) };      /* @sic R5s120470 sic@ */

    //Init cell array and security
    f_EUTRA_Init ( c1 );

    //Set Sys info for cell 1 to be used at creation
    f_EUTRA_CellInfo_SetSysInfo_T310 ( eutra_Cell1, ms2000 );

    //Create and configure cell
    f_EUTRA_CellConfig_Def ( eutra_Cell1 );

    //The UE is in state Loopback Activated (state 4) on Cell 1 according to [18] using the UE TEST LOOP MODE B.
    f_EUTRA_Preamble ( eutra_Cell1, STATE2A_TESTLOOP_ModeB );
    f_EUTRA_GenericRbEst_TAInfinity ( eutra_Cell1 ); //@sic R5s100720 sic@
    f_EUTRA_CloseUE_TestLoopModeB ( eutra_Cell1, '05'O );

    //* @desc Set cell power levels according to T0 in Table 13.4.1.2.3.2-1
    f_EUTRA_SetCellPower ( eutra_Cell1, -97 );

    f_EUTRA_TestBody_Set ( true, layer2 );

    //SS wait for the 660ms to ensure that DL Timing Advance is sent at least once and UE apply the
    //value of timeAlignmentTimerDedicated which is updated during the preamble.
    v_TimingInfo := f_EUTRA_GetNextSendOccasion ( eutra_Cell1, 660 );

    //@siclog "Step 1" siclog@
    /* The SS transmits one IP packet to the UE on the DRB associated with the default EPS bearer context on Cell 1. */
    DRB.send(cas_DRB_COMMON_REQ_PDCP_SDU(eutra_Cell1, tsc_RbId_DRB1, cs_TimingInfo(v_TimingInfo.SFN.Number, v_TimingInfo.Subframe.Number), v_PDCP_SDUList_DRB1));     /* @sic R5s120470 sic@ */
             
    //@siclog "Step 2" siclog@
    /* 100 ms after step 1 the SS reduce DL RS TX power level of Cell 1 from "T0" to "T1" in table 13.3.1.1.3.2-1.
       Note: 100 ms delay after step 1 is to ensure that UE has time to transmit STATUS PDU for data received in step 1 */
    v_TimingInfo := f_EUTRA_TimingInfoAdd ( v_TimingInfo, 100 ); //@sic R5s110051 sic@
    f_EUTRA_SetCellPower ( eutra_Cell1, tsc_NonSuitableOffCellRS_EPRE, cs_TimingInfo ( v_TimingInfo.SFN.Number, v_TimingInfo.Subframe.Number ) ); //@sic R5s110051 sic@

    //@siclog "Step 3" siclog@
    /* The SS waits for 1.5s. T310 is 2s. */
    v_TimingInfo := f_EUTRA_TimingInfoAdd ( v_TimingInfo, 1500 );

    //@siclog "Step 4" siclog@
    /* The SS recovers DL RS TX power level of Cell 1 from "T1" to "T2" in table 13.3.1.1.3.2-1.  */
    f_EUTRA_SetCellPower ( eutra_Cell1, tsc_ServingCellRS_EPRE, cs_TimingInfo ( v_TimingInfo.SFN.Number, v_TimingInfo.Subframe.Number ) );

    //@siclog "Step 5" siclog@
    /* Check: Does the UE loop back the IP packet on the DRB associated with the default EPS bearer context on Cell 1?( Note 1) */
    DRB.receive(car_DRB_COMMON_IND_PDCP_SDUList(eutra_Cell1, tsc_RbId_DRB1, ?, v_PDCP_SDUList_DRB1));  /* @sic R5s120470 sic@ */
    f_EUTRA_PreliminaryPass(__FILE__, __LINE__, "Test Case 13.3.1.1 Step 5");

    f_EUTRA_TestBody_Set ( false );

    //Postamble
    f_EUTRA_Postamble ( eutra_Cell1, E3_TESTMODE );
  }

  function f_TC_13_3_1_2_EUTRA() runs on EUTRA_PTC
  { /* Intra-system connection re-establishment / Re-establishment of a new connection when further data is to be transferred */

    var template (value) CellPowerList_Type v_CellPowerList_AtT0;
    var template (value) CellPowerList_Type v_CellPowerList_AtT1;
    var ShortMAC_I v_ShortMAC_I;
    var PhysCellId v_PhysicalCellIdentity_Cell1;
    var template (value) EUTRA_FDD_TDD_CellInfo_Type v_EUTRA_FDD_TDD_Info;
    var template (value) PhysicalConfigDedicated_AntennaInfo_Type v_AntennaInfo;
    var EUTRA_SecurityParams_Type v_Auth_Params;
    var NextHopChainingCount v_NextHopChainingCount := 0; // Default configuration value according to TS 36.508 Table 4.6.1-10
    var SR_PUCCH_ResourceIndex_Type v_Sr_PUCCH_ResourceIndex; //@sic R5100744 sic@
    var SR_ConfigIndex_Type v_SR_ConfigIndex; //@sic R5100744 sic@
    var SubFrameTiming_Type v_TimingInfo;
    var PDCP_SDUList_Type v_PDCP_SDUList_DRB1 := { f_IPv4IPv6_IcmpEchoReply(f_LoopbackModeB_IP_Address_UE()) };      /* @sic R5s120470 sic@ */

    //Init cell array and security
    f_EUTRA_Init ( c1 );

    //Get cell specific parameters for Cell 1
    v_PhysicalCellIdentity_Cell1 := f_EUTRA_CellInfo_GetPhyCellId ( eutra_Cell1 );

    //Get FDD or TDD mode from Cell-configuration
    v_EUTRA_FDD_TDD_Info := f_EUTRA_CellInfo_GetFDD_TDD_Info ( eutra_Cell2 );
    v_AntennaInfo := f_EUTRA_CellInfo_GetAntennaInfoDedicated ( eutra_Cell2 );

    //Create and configure cell
    f_EUTRA_CellConfig_Def ( eutra_Cell1 );
    f_EUTRA_CellConfig_Def ( eutra_Cell2 );

    //The UE is in state Loopback Activated (state 4) on Cell 1 according to [18] using the UE TEST LOOP MODE B.
    f_EUTRA_Preamble ( eutra_Cell1, STATE2A_TESTLOOP_ModeB );
    fl_EUTRA_GenericRbEst_DSR_TransMax ( eutra_Cell1 );     //@sic R5s100744 sic@
    f_EUTRA_CloseUE_TestLoopModeB ( eutra_Cell1, '05'O );   //@sic R5s110430 sic@

    //Set initial cell power levels
    v_CellPowerList_AtT0 := {
      cs_CellPower ( eutra_Cell1, tsc_ServingCellRS_EPRE ),
      cs_CellPower ( eutra_Cell2, tsc_NonSuitableCellRS_EPRE )
    };
    f_EUTRA_SetCellPowerList ( v_CellPowerList_AtT0 );

    v_ShortMAC_I := f_Calculate_ShortMAC ( eutra_Cell1, eutra_Cell2 );

    f_EUTRA_TestBody_Set ( true, layer2 );

    //@siclog "Step 0" siclog@
    // Void //@sic R5-113190 sic@

    //@siclog "Step 1" siclog@
    /* The SS transmits one IP packet to the UE on the DRB associated with the default EPS bearer context on Cell 1. */
    DRB.send(cas_DRB_COMMON_REQ_PDCP_SDU(eutra_Cell1, tsc_RbId_DRB1, cs_TimingInfo_Now, v_PDCP_SDUList_DRB1));     /* @sic R5s120470 sic@ */

    //PDCP count shall be kept in PDCP re-establishment for AM DRB
    //f_EUTRA_SS_PdcpCount_Handover ( eutra_Cell1, eutra_Cell2, { tsc_DRB1 } ); //@sic R5100744, R5-120721 change 7: f_EUTRA_SS_PdcpCount_Handover is done by f_EUTRA_508RRC_IntraLTE_HO_InterCell sic@

    //@siclog "Step 2" siclog@
    /* 100 ms after step 1 the SS changes the power level of cell 1 to non-suitable "Off" and changes the power level of cell 2 to suitable
       according to TS 36.508 subclause 6.2.2.1 in order that the radio link quality of Cell 1 is degraded. Note: 100 ms delay after step 1
       is to ensure that UE has time to transmit STATUS PDU for data received in step 1 */
    v_TimingInfo := f_EUTRA_GetNextSendOccasion ( eutra_Cell2, 100 ); //@sic R5-112703, R5s110499 sic@
    v_CellPowerList_AtT1 := {
      cs_CellPower ( eutra_Cell1, tsc_NonSuitableOffCellRS_EPRE ),
      cs_CellPower ( eutra_Cell2, tsc_Suitable_NeighbourIntraFreq_CellRS_EPRE ) //@sic R5s110499 sic@
    };
    f_EUTRA_SetCellPowerList ( v_CellPowerList_AtT1, cs_TimingInfo ( v_TimingInfo.SFN.Number, v_TimingInfo.Subframe.Number ), eutra_Cell2 ); //@sic R5-112703, R5s110318 Change 3.1 sic@

    //@siclog "Step 3" siclog@
    /* Check: Does the UE initiate an RRC connection re-establisment procedure and transmit an RRCConnectionReestablishmentRequest message on Cell 2?  */
    SRB.receive( car_SRB0_RrcPdu_IND( eutra_Cell2,
                                      cr_508_RRCConnectionReestablishmentRequest ( tsc_C_RNTI_Def,
                                                                                   v_PhysicalCellIdentity_Cell1,
                                                                                   cr_ReestablishmentCause_OtherFailure,
                                                                                   v_ShortMAC_I ) ) );
    f_EUTRA_PreliminaryPass(__FILE__, __LINE__, "Test Case 13.3.1.2 Step 3");

    // Activate RRC security at SS target cell (Cell2) for SRB 1, 2 and 1 AM DRB
    v_Auth_Params := f_EUTRA_SS_AS_ActivateSecurity_HO_Reest ( eutra_Cell2, f_EUTRA_Security_Get(), v_NextHopChainingCount ); //@sic R5100744 sic@
    f_EUTRA_Security_Set ( v_Auth_Params ); //@sic R5100744 sic@

    //@siclog "Step 4" siclog@
    /* The SS transmits RRCConnectionReestablishment message. */
    f_EUTRA_RRC_RRCConnectionReestablishment_Def ( eutra_Cell2, -, v_NextHopChainingCount );

    //@siclog "Step 5" siclog@
    /* UE transmits an RRCConnectionReestablishmentComplete message */
    SRB.receive ( car_SRB1_RrcPdu_IND ( eutra_Cell2,  cr_508_RRCConnectionReestablishmentComplete( tsc_RRC_TI_Def ) ) );

    v_SR_ConfigIndex := f_EUTRA_CellInfo_GetSR_ConfigIndex (eutra_Cell2 );
    v_Sr_PUCCH_ResourceIndex := f_EUTRA_CellInfo_GetSR_PUCCH_ResourceIndex ( eutra_Cell2 );
    //@siclog "Step 6" siclog@
    /* The SS transmits RRCConnectionReconfiguration message */
    SRB.send ( cas_SRB1_RrcPdu_REQ ( eutra_Cell2, //@sic R5100744 sic@
                                     cs_TimingInfo_Now,
                                     cs_RRCConnReconfig_Resume_SRB2_DRBs ( tsc_RRC_TI_Def,
                                                                           v_EUTRA_FDD_TDD_Info.cqi_ReportConfig,
                                                                           v_EUTRA_FDD_TDD_Info.soundingRS_UL_Config,
                                                                           v_AntennaInfo,
                                                                           v_Sr_PUCCH_ResourceIndex,
                                                                           v_SR_ConfigIndex) ) );

    //EXCEPTION : the steps 7 and 8 can happen in any order
    //@siclog "Step 7 - 8" siclog@
    /* UE transmits an RRCConnectionConfigurationComplete message */
    /* Check: Does the UE loop back the IP packet on the DRB associated with the default EPS bearer context on Cell 2? */
    interleave { //@sic R5100744 sic@
      [] SRB.receive(car_SRB1_RrcPdu_IND(eutra_Cell2, cr_508_RRCConnectionReconfigurationComplete(tsc_RRC_TI_Def))) {}
      [] DRB.receive(car_DRB_COMMON_IND_PDCP_SDUList(eutra_Cell2, tsc_RbId_DRB1, ?, v_PDCP_SDUList_DRB1))  {} /* @sic R5s120470 sic@ */
    }
    f_EUTRA_PreliminaryPass(__FILE__, __LINE__, "Test Case 13.3.1.2 Step 8");

    f_EUTRA_TestBody_Set ( false );

    //Postamble
    f_EUTRA_Postamble ( eutra_Cell2, E3_TESTMODE ); //@sic R5100744 sic@
  }

  function f_TC_13_4_1_2_EUTRA() runs on EUTRA_PTC
  {
    var Frequency_IE_Type v_Frequency_IE_Cell3, v_Frequency_IE_Cell1; //@sic R5s100854 Change 1.2 sic@
    var ChannelBandwidthDependency_Type v_ChBandDependency_Cell3, v_ChBandDependency_Cell1; //@sic R5s100854 Change 1.2 sic@
    var PhysCellId v_PhysicalCellIdentity_Cell3;
    var CarrierFreqEUTRA v_CarrierFreq_Cell3; //@sic R5s110279 change 1 sic@
    var EUTRA_SecurityParams_Type v_Auth_Params;
    var PDCP_SDUList_Type v_PDCP_SDUList_DRB1 := { f_IPv4IPv6_IcmpEchoReply(f_LoopbackModeB_IP_Address_UE()) };      /* @sic R5s120470 sic@ */
    var default v_DefaultRef;

    //Init cell array and security
    f_EUTRA_Init (c3);

    //Set cell powel level for cell 3 to be used at creation
    f_EUTRA_CellInfo_InitMaxReferencePower (eutra_Cell3, -73);

    //Get cell specific parameters for Cell 3
    v_Frequency_IE_Cell3 := f_EUTRA_CellInfo_GetFrequencyIEs (eutra_Cell3);
    v_ChBandDependency_Cell3 := f_EUTRA_BandDependentParam (v_Frequency_IE_Cell3.DL_ChBandwidth,
                                                            v_Frequency_IE_Cell3.UL_ChBandwidth);
    v_PhysicalCellIdentity_Cell3 := f_EUTRA_CellInfo_GetPhyCellId (eutra_Cell3); //@sic R5s100584 : Change 1.1 sic@
    v_CarrierFreq_Cell3 := f_EUTRA_CellInfo_GetEARFCN (eutra_Cell3); //@sic R5s110279 change 1 sic@
    v_Frequency_IE_Cell1 := f_EUTRA_CellInfo_GetFrequencyIEs (eutra_Cell1); //@sic R5s100854 Change 1.2 sic@
    v_ChBandDependency_Cell1 := f_EUTRA_BandDependentParam (v_Frequency_IE_Cell1.DL_ChBandwidth,
                                                            v_Frequency_IE_Cell1.UL_ChBandwidth); //@sic R5s100854 Change 1.2 sic@

    //Apply new C-RNTI on target cell to be used at creation of cell 3
    f_EUTRA_CellInfo_SetC_RNTI (eutra_Cell3, tsc_C_RNTI_Def2 );

    //Create and configure cell with SRBs and one AM DRB.
    //The AM DRB will be associated with the default EPS bearer context
    f_EUTRA_CellConfig_Def (eutra_Cell1);
    f_EUTRA_CellConfig_Def (eutra_Cell3);

    //Bring UE to Initial state
    //The UE is in state Loopback ActivatedGeneric RB Established (state 4) on Cell 1 according to [18] using the UE TEST LOOP MODE B.
    f_EUTRA_Preamble (eutra_Cell1, STATE2A_TESTLOOP_ModeB);
    f_EUTRA_RbEst_Def (eutra_Cell1);
    f_EUTRA_CloseUE_TestLoopModeB (eutra_Cell1, '00'O);

    //Set cell power levels according to T0 in Table 13.4.1.2.3.2-1
    f_EUTRA_SetCellPower (eutra_Cell3, -97);

    //Get security parameters
    v_Auth_Params := f_EUTRA_Security_Get();

    f_EUTRA_TestBody_Set (true, layer2);

    //@siclog "Step 1" siclog@
    //Transmits one IP packet to the UE on the DRB associated with the default EPS bearer context
    DRB.send(cas_DRB_COMMON_REQ_PDCP_SDU(eutra_Cell1, tsc_RbId_DRB1, cs_TimingInfo_Now, v_PDCP_SDUList_DRB1));     /* @sic R5s120470 sic@ */

    //@siclog "Step 2" siclog@
    //Check if UE loops back the IP packet
    DRB.receive (car_DRB_COMMON_IND_PDCP_SDUList(eutra_Cell1, tsc_RbId_DRB1, ?, v_PDCP_SDUList_DRB1));  /* @sic R5s120470 sic@ */
    f_EUTRA_PreliminaryPass(__FILE__, __LINE__, "Test Case 13.4.1.2 Step 2");

    //@siclog "Step 3-4" siclog@
    //@sic R5s110743 sic@
    f_EUTRA_RRCConnectionReconfiguration_MeasConfig(eutra_Cell1,
                                                    cs_508_RRCConnectionReconfiguration_ConditionMEAS (tsc_RRC_TI_Def,
                                                                                                       cs_Measurement_Config_A3_InterFreq (v_Frequency_IE_Cell3.UL_DL_Earfcn.dl_CarrierFreq, //@sic R5s110168 & R5s110171 sic@
                                                                                                                                           v_ChBandDependency_Cell3.AllowedMeasBandwidth, //@sic R5s110168 & R5s110171 sic@
                                                                                                                                           v_Frequency_IE_Cell1.UL_DL_Earfcn.dl_CarrierFreq, //@sic R5s110168 & R5s110171 sic@
                                                                                                                                           v_ChBandDependency_Cell1.AllowedMeasBandwidth, //@sic R5s110168 & R5s110171 sic@
                                                                                                                                           cs_508_MeasGapConfig_GP1))); //@sic R5s100854 Change 1.2 & 1.3 sic@
    //@siclog "Step 5" siclog@
    //Set Cell 3 parameters according to T1 in table 13.4.1.2.3.2-1
    f_EUTRA_SetCellPower (eutra_Cell3, -73);

    //@siclog "Step 6" siclog@
    //Receive a MeasurementReport message on Cell 1 to report event A3 with the measured RSRP and RSRQ value for Cell 3
    SRB.receive (car_SRB1_RrcPdu_IND (eutra_Cell1, cr_MeasurementReport (1,//Measurement ID
                                                                         ?,//RSRP result
                                                                         ?,//RSRQ result
                                                                         cr_MeasResultNeighCells_measResultListEUTRA_1Entry (v_PhysicalCellIdentity_Cell3,
                                                                                                                             omit,//CGI Info
                                                                                                                             ?,//RSRP result
                                                                                                                             ?))));//RSRQ result
    //Activate the default to receive further measurement reports for cell 4 on cell 1
    v_DefaultRef := activate (a_EUTRA_AddDefault_PeriodicalMeasurmentReport (eutra_Cell1,
                                                                             cr_MeasurementReport (1, ?, ?,
                                                                                                   cr_MeasResultNeighCells_measResultListEUTRA_1Entry (v_PhysicalCellIdentity_Cell3,
                                                                                                                                                       omit, ?, ?))));

    //Transfer the PDCP count/sequence number from source to target cell
    //f_EUTRA_SS_PdcpCount_Handover ( eutra_Cell1, eutra_Cell3, { tsc_DRB1 } ); //@sic R5100744, R5-120721 change 7: f_EUTRA_SS_PdcpCount_Handover is done by f_EUTRA_508RRC_IntraLTE_HO_InterCell sic@

    //@siclog "Step 7 - 8" siclog@
    //Transmit RRCConnectionReconfiguration message to order the UE to perform inter frequency handover to Cell 3
    //Receieve RRCConnectionReconfigurationComplete message to confirm the successful completion of the inter frequency HO
    f_EUTRA_508RRC_IntraLTE_HO_InterCell (eutra_Cell1,
                                          eutra_Cell3,
                                          -, //p_DrbConfigList
                                          -, //p_C_RNTI
                                          -, //p_MeasConfig
                                          -, //p_DciUlInfo_TargetCell
                                          -, //p_UL_GrantConfig_SourceCell
                                          -, //p_UL_GrantConfig_TargetCell
                                          -, //p_Dsr_TransMax
                                          cs_CarrierFreqEUTRA(v_CarrierFreq_Cell3.dl_CarrierFreq, omit));  //@sic R5s110279 change 1 sic@
    //Deactivate the default to stop receiving measurement reports for cell 3 on cell 1
    deactivate (v_DefaultRef);

    //@siclog "Step 9" siclog@
    //Transmits one IP packet to the UE on the DRB associated with the default EPS bearer context
    DRB.send(cas_DRB_COMMON_REQ_PDCP_SDU(eutra_Cell3, tsc_RbId_DRB1, cs_TimingInfo_Now, v_PDCP_SDUList_DRB1));     /* @sic R5s120470 sic@ */

    //@siclog "Step 10" siclog@
    //Check if UE loops back the IP packet
    DRB.receive(car_DRB_COMMON_IND_PDCP_SDUList(eutra_Cell3, tsc_RbId_DRB1, ?, v_PDCP_SDUList_DRB1));  /* @sic R5s120470 sic@ */
    f_EUTRA_PreliminaryPass(__FILE__, __LINE__, "Test Case 13.4.1.2 Step 10");

    f_EUTRA_TestBody_Set (false);

    //Postamble
    f_EUTRA_Postamble (eutra_Cell3, E3_TESTMODE);
  }

}
