/******************************************************************************/
// @copyright   Copyright Notification
//   No part may be reproduced except as authorized by written permission.
//   The copyright and the foregoing restriction extend to reproduction in all media.
//   Trademark 2011, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TTA, TTC).
//   All rights reserved.
// @version: 36.523-3v10.1.0
// $Date: 2012-09-03 11:59:47 +0200 (Mon, 03 Sep 2012) $
// $Rev: 7256 $
/******************************************************************************/

module LTE_EPS_TS_SelectionExpressions {

  import from Parameters all;
  import from UTRAN_Parameters all;
  import from EUTRA_Parameters all;

  type enumerated Condition_Type {
    R,
    C01,
    C02,
    C03,
    C04,
    C05,
    C06,
    C07,
    C08,
    // C09 void
    C10,
    C11,
    // C12 void
    C13,
    C14,
    C15,
    C16,
    C17,
    // C18 void
    C19,
    C20,
    C21,
    C22,
    C23,
    C24,
    C25,
    C26,
    C27,
    // C28 void,
    C29,
    C30,
    C31,
    C32,
    C33,
    C34,
    C35,
    C36,
    C37,
    C38,
    C39,
    C40,
    C41,
    C42,
    //C43,
    C44,
    C45,
    C46,
    C47,
    C48,
    C49,
    C50,
    C51,
    C52,
    C53,
    C54,
    C55,
    C56,
    C57,
    C58,
    C59,
    C60,
    C61,
    // C62 void
    C63,
    C64,
    C65,
    C66,
    // C67 void
    C68,
    C69,
    // C70 void
    C71,
    // C72 void
    // C73 void
    C74,
    C75,
    C76,
    C77,
    // C78 void
    // C79 void
    C80,
    C81,
    C82,
    // C83 void
    C84,
    // C85 void
    C86,
    C87,
    C88,
    C89,
    C94,
    C95,
    C97,
    // C102 void
    C90,
    C91,
    C92,
    C93,
    C98,
    C96,
    C99,
    C100,
    // C102 void
    C103,
    C104,
    C105,
    C106,
    C107,
   // C108 void
    C109,
    C110,
    C111,
    C112,
    C114,
    C115,
    C118,
    C119,
    C116,
    C117,
    C120,
    C121,
    // C122 void
    C123,
    // C124, void
    C125,
    C126,
    C127,
    C128,
    C129,
    C130,
    C131,
    C139,
    C140,
    C141,
    C142,
    C143,
    C144,
    Cxx_R5123551,
    Cxx_R5123628,
    Cxx_R5123750
  }

  function f_SelectionExpr ( Condition_Type p_Condition) return boolean {
  /* Set the applicability conditions according to 36.523-2 Table 4-1a: Applicability of tests Conditions */

    var boolean v_ApplCond;

    select (p_Condition) {
      //R: UEs supporting E-UTRA
      case (R) {
        v_ApplCond := true;
      }
      //C01: UEs supporting E-UTRA and UTRA
      case (C01) {
        v_ApplCond := pc_UTRA;
      }
      //C02: UEs supporting E-UTRA and combined EPS/IMSI attach (with or without pre-configuration)
      case (C02) {
        v_ApplCond := pc_Combined_Attach;
      }
      //C03: UEs supporting USIM removal without power down
      case (C03) {
        v_ApplCond := pc_USIM_Removal;
      }
      //C04: UEs supporting E-UTRA and EPS attach (with or without pre-configuration)
      case (C04) {
        v_ApplCond := pc_Attach;
      }
      //C05: UEs supporting GERAN
      case (C05) {
        v_ApplCond := pc_GERAN;
      }
      //C06: UEs supporting E-UTRA and HRPD
      case (C06) {
        v_ApplCond := pc_HRPD;
      }
      //C07: UEs supporting E-UTRA and 1xRTT
      case (C07) {
        v_ApplCond := pc_1xRTT;
      }
      //C08: UEs supporting E-UTRA and Feature Group 5
      case (C08) {
        v_ApplCond := pc_FeatrGrp_5;
      }
      //C10: UEs supporting E-UTRA and Feature Group Indicator 25
      case (C10) {
        v_ApplCond := pc_FeatrGrp_25;
      }
      //C11: UEs supporting E-UTRA and Feature Group Indicator 16 and Feature Group Indicator 25
      case (C11) {
        v_ApplCond := pc_FeatrGrp_16 and pc_FeatrGrp_25;
      }
      //C13: UEs supporting E-UTRA and UTRA and Feature Group Indicator 16 and Feature Group Indicator 22
      case (C13) {
        v_ApplCond := pc_UTRA and pc_FeatrGrp_16 and pc_FeatrGrp_22;
      }
      //C14: UEs supporting E-UTRA and Feature Group Indicator 5 and Feature Group Indicator 17
      case (C14) {
        v_ApplCond := pc_FeatrGrp_5 and pc_FeatrGrp_17;
      }
      //C15: UEs supporting E-UTRA and Feature Group Indicator 3 and Feature Group Indicator 7
      case (C15) {
        v_ApplCond := pc_FeatrGrp_3 and pc_FeatrGrp_7;
      }
      //C16: UEs supporting E-UTRA and Feature Group Indicator 7
      case (C16) {
        v_ApplCond := pc_FeatrGrp_7;
      }
      //C17: UEs supporting E-UTRA, UTRAN, GERAN and Feature Group Indicators 22 and 23
      case (C17) {
        v_ApplCond := pc_UTRA and pc_GERAN and pc_FeatrGrp_22 and pc_FeatrGrp_23;
      }
      //C19: UEs supporting E-UTRA and Feature Group Indicator 6 and 7
      case (C19) {
        v_ApplCond := pc_FeatrGrp_6 and pc_FeatrGrp_7; // @sic R5-103314 sic@
      }
      //C20: UEs supporting E-UTRA and GERAN and Feature Group Indicator 16 and Feature Group Indicator 23
      case (C20) {
        v_ApplCond := pc_GERAN and pc_FeatrGrp_16 and pc_FeatrGrp_23;
      }
      //C21: UEs supporting E-UTRA and Feature Group Indicator 13 and Feature Group Indicator 25
      case (C21) {
        v_ApplCond := pc_FeatrGrp_13 and pc_FeatrGrp_25;
      }
      //C22: UEs supporting E-UTRA and  MT SMS over SGs
      case (C22) {
        v_ApplCond := pc_SMS_SGs_MT;
      }
      //C23: UEs supporting E-UTRA and MO SMS over SGs
      case (C23) {
        v_ApplCond := pc_SMS_SGs_MO;
      }
      //C24: UEs supporting E-UTRA and HRPD and Feature Group Indicator 16 and Feature Group Indicator 26
      case (C24) {
        v_ApplCond := pc_HRPD and pc_FeatrGrp_16 and pc_FeatrGrp_26;
      }
      //C25: UEs supporting E-UTRA and 1xRTT and Feature Group Indicator 16 and Feature Group Indicator 24
      case (C25) {
        v_ApplCond := pc_1xRTT and pc_FeatrGrp_16 and pc_FeatrGrp_24;
      }
      //C26: UEs supporting E-UTRA and CS fallback
      case (C26) {
        v_ApplCond := pc_CS_Fallback;
      }
      //C27: UEs supporting E-UTRA and UTRAN or GERAN and ISR
      case (C27) {
        v_ApplCond := (pc_UTRA or pc_GERAN) and pc_ISR;
      }
      //C28: Void
      //C29: UEs supporting E-UTRA  and Feature Group Indicator 7 and (UE Category 2 or UE Category 3 or UE Category 4 or UE Category 5)
      case (C29) {
        v_ApplCond := pc_FeatrGrp_7 and (pc_ue_Category_2 or pc_ue_Category_3 or pc_ue_Category_4 or pc_ue_Category_5) ;
      }
      //C30: UEs supporting E-UTRA and Feature Group Indicator 20 and (UE Category 2 or UE Category 3 or UE Category 4 or UE Category 5)
      case (C30) {
        v_ApplCond := pc_FeatrGrp_20 and (pc_ue_Category_2 or pc_ue_Category_3 or pc_ue_Category_4 or pc_ue_Category_5) ;
      }
      //C31: UEs supporting E-UTRA and  Feature Group Indicator 7 and Feature Group Indicator 20 and (UE Category 2 or UE Category 3 or UE Category 4 or UE Category 5)
      case (C31) {
        v_ApplCond := (pc_FeatrGrp_7 and pc_FeatrGrp_20) and (pc_ue_Category_2 or pc_ue_Category_3 or pc_ue_Category_4 or pc_ue_Category_5) ;
      }
      //C32: UEs supporting E-UTRA and Feature Group Indicator 7 and Feature Group Indicator 20
      case (C32) {
        v_ApplCond := pc_FeatrGrp_7 and pc_FeatrGrp_20;
      }
      //C33: UEs supporting E-UTRA and Feature Group Indicator 20
      case (C33) {
        v_ApplCond := pc_FeatrGrp_20;
      }
      //C34: UEs supporting E-UTRA, UTRA and GERAN
      case (C34) {
        v_ApplCond := pc_UTRA and pc_GERAN;
      }
      //C35: UEs supporting E-UTRA, and UTRA
      case (C35) {
        v_ApplCond := pc_UTRA;
      }
      //C36: UEs supporting E-UTRA and UTRA and Feature Group Indicator 8 and Feature Group Indicator 22
      case (C36) {
        v_ApplCond := pc_UTRA and pc_FeatrGrp_8 and pc_FeatrGrp_22;
      }
      //C37: UEs supporting E-UTRA and UTRA and inter-RAT PS handover to E-UTRA from UTRA and UTRA Feature Group Indicator 2
      case (C37) {
        v_ApplCond := pc_UTRA and (pc_HO_from_UTRA_to_eFDD or pc_HO_from_UTRA_to_eTDD) and pc_UTRA_FeatrGrp_2;
      }
      //C38: UEs supporting E-UTRA and GSM and Feature Group Indicator 10 and Feature Group Indicator 23
      case (C38) {
        v_ApplCond := pc_GERAN and pc_FeatrGrp_10 and pc_FeatrGrp_23;
      }
      //C39: UEs supporting E-UTRA and UTRA and Feature Group Indicator 5 and Feature Group Indicator 19 and Feature Group 22
      case (C39) {
        v_ApplCond := pc_UTRA and pc_FeatrGrp_5 and pc_FeatrGrp_19 and pc_FeatrGrp_22;
      }
      //C40: UEs supporting E-UTRA and GERAN and Feature Group Indicator 5 and Feature Group Indicator 19 and Feature Group 23
      case (C40) {
        v_ApplCond := pc_GERAN and pc_FeatrGrp_5 and pc_FeatrGrp_19 and pc_FeatrGrp_23;
      }
      //C41: UEs supporting E-UTRA and 1xRTT and 1xCS fallback
      case (C41) {
        v_ApplCond := pc_1xRTT and pc_1xCSfallback;
      }
      //C42: UEs supporting E-UTRA and HRPD and Feature Group Indicator 12 and Feature Group Indicator 26
      case (C42) {
        v_ApplCond := pc_HRPD and pc_FeatrGrp_12 and pc_FeatrGrp_26;
      }
      //C44: UEs supporting E-UTRA and HRPD and Feature Group Indicator 5 and Feature Group Indicator 19 and Feature Group Indicator 26
      case (C44) {
        v_ApplCond := pc_HRPD and pc_FeatrGrp_5 and pc_FeatrGrp_19 and pc_FeatrGrp_26;
      }
      //C45: UEs supporting E-UTRA and 1xRTT and Feature Group Indicator 5 and Feature Group Indicator 19 and Feature Group Indicator 24
      case (C45) {
        v_ApplCond := pc_1xRTT and pc_FeatrGrp_5 and pc_FeatrGrp_19 and pc_FeatrGrp_24;
      }
      //C46: UEs supporting E-UTRA FDD and TDD and not supporting eEMM INFORMATION
      case (C46) {
         v_ApplCond := not pc_EMM_Information;
      }
      //C47: UEs supporting E-UTRA and allowed CSG list and EPS attach (with or without pre-configuration)
      case (C47) {
         v_ApplCond := pc_Allowed_CSG_list and pc_Attach;
      }
      //C48: UE supporting UTRA and CS fallback and speech
      case (C48) {
         v_ApplCond := pc_UTRA and pc_CS_Fallback and pc_Speech;
      }
      //C49: UEs supporting E-UTRA and Mobility management based on Dual-Stack Mobile IPv6 and being configured to discover the Home Agent address via DHCPv6
      case (C49) {
         v_ApplCond := false;//pc_DSMIPv6 and pc_HAAddress_via_DHCPv6
      }
      //C50: UEs supporting E-UTRA and Mobility management based on Dual-Stack Mobile IPv6 and being configured to discover the Home Agent address via IKEv2
      case (C50) {
         v_ApplCond := false;//pc_DSMIPv6 and pc_HAAddress_via_IKEv2
      }
      //C51: UEs supporting E-UTRA and  supporting the EMM information message
      case (C51) {
         v_ApplCond := (pc_eFDD or pc_eTDD) and pc_EMM_Information and (pc_FullNameNetwork or pc_ShortNameNetwork or pc_LocalTimeZone or pc_UniversalAndLocalTimeZone);
      }
      //C52: UEs supporting E-UTRA and 1xRTT and SRVCC from E-UTRA to 1xRTT (CS)
      case (C52) {
         v_ApplCond := false;//pc_1xRTT and pc_SRVCC_1xRTT_CS;
      }
      //C53: UEs supporting E-UTRA and switch on/off
      case (C53) {
        v_ApplCond := pc_SwitchOnOff;
      }
      //C54: UEs supporting E-UTRA and ESM UE requested bearer resource allocation procedure
      case (C54) {
        v_ApplCond := pc_ESM_MO_Bearer_Allocation;
      }
      //C55: Ues supporting E-UTRA and ESM UE requested bearer resource modification procedure and UE requested modification of network allocated TFTs
      case (C55) {
        v_ApplCond := pc_ESM_MO_Bearer_Modification and pc_ESM_UE_Modification_NW_TFT;
      }
      //C56: UEs supporting E-UTRA and (UE Category 2 or UE Category3 or UE Category 4 or UE Category 5)
      case (C56) {
        v_ApplCond := (pc_ue_Category_2 or pc_ue_Category_3 or pc_ue_Category_4 or pc_ue_Category_5);
      }
      //C57: UEs supporting E-UTRA and GERAN an CS fallback and speech
      case (C57) {
        v_ApplCond := pc_GERAN and pc_CS_Fallback and pc_Speech;
      }
      //C58: UEs supporting E-UTRA and Feature Group Indicator 21
      case (C58) {
        v_ApplCond := pc_FeatrGrp_21;
      }
      //C59: UEs supporting E-UTRAN and UTRAN and ISR
      case (C59) {
        v_ApplCond := pc_UTRA and pc_ISR;
      }
      //C60: UEs supporting E-UTRA and GERAN an CS fallback and speech
      case (C60) {
        v_ApplCond := pc_GERAN and pc_CS_Fallback and pc_Speech;
      }
      //C61: UEs supporting E-UTRA, UTRA, GERAN and Feature Group Indicators 16, Feature Group Indicators 22 and Feature Group Indicators 23
      case (C61) {
        v_ApplCond := pc_UTRA and pc_GERAN and pc_FeatrGrp_16 and pc_FeatrGrp_22 and pc_FeatrGrp_23;
      }
      //C62 void
      //C63: UEs supporting E-UTRA FDD and TDD and Feature Group Indicator 30
      case (C63) {
        v_ApplCond := pc_eFDD and pc_eTDD and pc_FeatrGrp_30;
      }
      //C64: UEs supporting E-UTRA and ETWS reception
      case (C64) {
        v_ApplCond := pc_ETWS_message;
      }
      //C65: Void
      case (C65) {
        v_ApplCond := false;
      }
      //C66: UEs supporting E-UTRA and GSM and GERAN to E-UTRAN neighbour cell measurements
      case (C66) {
        v_ApplCond := pc_GERAN and pc_GERAN_2_E_UTRAN_meas;
      }
      //C67 void
      //C68: UEs supporting E-UTRA and Mobility management based on Dual-Stack Mobile IPv6 and being configured to request the IPv6 address of the Home Agent during Attach procedure
      case (C68) {
        v_ApplCond := pc_DSMIPv6 and pc_RequestIPv6HAAddress_DuringAttach;
      }
      //C69: UEs supporting E-UTRA and Mobility management based on Dual-Stack Mobile IPv6 and being configured to request the IPv4 address of the Home Agent during Attach procedure
      case (C69) {
        v_ApplCond := pc_DSMIPv6 and pc_RequestIPv4HAAddress_DuringAttach;
      }
      //C70 void
      //C71: UEs supporting E-UTRA and IMS emergency call
      case (C71) {
        v_ApplCond := pc_IMS_emergency_call;
      }
      //C74: UEs supporting E-UTRA and Disable EPS capability.
      case (C74) {
        v_ApplCond := pc_EPS_Disable;
      }
      //C75: UEs supporting E-UTRA and UTRA and allowed CSG
      case (C75) {
        v_ApplCond := pc_UTRA and pc_Allowed_CSG_list;
      }
      //C76: UEs supporting E-UTRA and UTRA and allowed CSG list and manual CSG selection
      case (C76) {
        v_ApplCond := pc_UTRA and pc_Allowed_CSG_list and pc_Manual_CSG_Selection ;
      }
      //C77: UEs supporting E-UTRA and UTRA and UTRA Feature Group Indicators 1
      case (C77) {
        v_ApplCond := pc_UTRA and pc_UTRA_FeatrGrp_1;
      }
      //C78 void
      //C80: UEs supporting E-UTRA and allowed CSG list and manual CSG selection
      case (C80) {
        v_ApplCond := pc_Allowed_CSG_list and pc_Manual_CSG_Selection;
      }
      //C81: UEs supporting E-UTRA, UTRA, CS fallback and Feature Group Indicator 8 and speech and PS domain services and CS domain services simultaneously
      case (C81) {
        v_ApplCond := (pc_FDD or pc_TDD_HCR) and pc_CS_Fallback and pc_FeatrGrp_8 and pc_Speech and pc_SupportOpModeA;
      }
      //C82: UEs supporting E-UTRA and UTRA and allowed CSG list and UTRA Feature Group Indicators 1
      case (C82) {
        v_ApplCond := pc_UTRA and pc_Allowed_CSG_list and pc_UTRA_FeatrGrp_1;
      }
      //C84: UEs supporting E-UTRA and UTRA and CS fallback and speech and PS domain services and CS domain services simultaneously
      case (C84) {
        // @sic R5s120531 sic@
        v_ApplCond := pc_UTRA and pc_CS_Fallback and pc_Speech and pc_SupportOpModeA;
      }
      //C85 void
      //C86: UEs supporting E-UTRA, UTRA, combined EPS/IMSI attach (with or without pre-configuration) , and CS fallback and configured to CS/PS voice centric .
      case (C86) {
        v_ApplCond := pc_UTRA and pc_Combined_Attach and pc_CS_Fallback and pc_CS_PS_voice_centric ;
      }
      //C87: UEs supporting E-UTRA , UTRA, combined EPS/IMSI attach (with or without pre-configuration) , and CS fallback (and implicitly SMSoverSGs) and configured to CS/PS data centric.
      case (C87) {
        v_ApplCond := pc_UTRA and pc_Combined_Attach and pc_CS_Fallback and pc_CS_PS_data_centric ;
      }
      //C88: UEs supporting E-UTRA and UTRAN or/and E-UTRA and GERAN, and combined attach and registration to CS for  SMS only
      case (C88) {
        v_ApplCond := (pc_SMS_SGs or pc_1xCSfallback) and pc_IMS_emergency_call and (pc_UTRA or pc_GERAN) and pc_Combined_Attach;
      }
      // C89: UEs supporting E-UTRA and GSM and GERAN to E-UTRAN PS Handover
      case (C89) {
        v_ApplCond := pc_GERAN and pc_GERAN_2_E_UTRAN_PSHO ;
      }
      //C90: UEs supporting E-UTRA and GERAN and Feature Group Indicator 23
      case (C90) {
        v_ApplCond := pc_GERAN and pc_FeatrGrp_23;
      }
      //C91: UEs supporting E-UTRA and UTRA and Feature Group Indicator 22
      case (C91) {
        v_ApplCond := pc_UTRA and pc_FeatrGrp_22;
      }
      //C92: UEs supporting E-UTRA and HRPD and Feature Group Indicator 26
      case (C92) {
        v_ApplCond := pc_HRPD and pc_FeatrGrp_26;
      }
      //C93: UEs supporting E-UTRA and 1xRTT and Feature Group Indicator 24
      case (C93) {
        v_ApplCond := pc_1xRTT and pc_FeatrGrp_24;
      }
      //C95: UEs supporting E-UTRA and GERAN and allowed CSG list and manual CSG selection
      case (C95) {
        v_ApplCond := pc_GERAN and pc_Allowed_CSG_list and pc_Manual_CSG_Selection;
      }
      //C96: UEs supporting E-UTRA and GERAN and CS fallback and Feature Group Indicator 10 and speech
      case (C96) {
        v_ApplCond := pc_FeatrGrp_10 and pc_GERAN and pc_CS_Fallback and pc_Speech;
      }
      //C97: UEs supporting E-UTRA and Multiple PDN
      case (C97) {
        v_ApplCond := pc_Multiple_PDN;
      }
      //C98: UEs supporting E-UTRA and ESM UE requested bearer resource allocation procedure and Multiple PDN
      case (C98) {
        v_ApplCond := pc_ESM_MO_Bearer_Allocation and pc_Multiple_PDN;
      }
       //C99:UEs supporting E-UTRA and TTI bundling and Feature Group Indicator 7
      case (C99) {
        v_ApplCond := pc_TTI_Bundling and pc_FeatrGrp_7;
      }
       //C100: UEs supporting E-UTRA and semi-persistence scheduling and Feature Group Indicator 3 and 7
      case (C100) {
        v_ApplCond := pc_Semi_Persistence_Scheduling and pc_FeatrGrp_7;
      }
      //C103: UEs supporting E-UTRA and UE Category 1
      case (C103) {
        v_ApplCond := (pc_eFDD or pc_eTDD) and pc_ue_Category_1;
      }
      // C104: UEs supporting E-UTRA and UTRA and CS fallback and use of the UTRA system information provided by RRCConnectionRelease upon redirection
      case (C104) {
        v_ApplCond := pc_UTRA and pc_CS_Fallback and pc_eRedirectionUTRA;
      }
      // C105: UEs supporting E-UTRA, UTRA, CS fallback and Feature Group Indicator 8 and speech
      case (C105) {
        v_ApplCond := pc_UTRA and pc_CS_Fallback and pc_FeatrGrp_8 and pc_Speech;
      }
      // C106: UEs supporting E-UTRA and detach for non-EPS services and, combined EPS/IMSI attach.
      case (C106) {
        v_ApplCond := (pc_IMSI_Detach and pc_Combined_Attach);  // @sic R5s120265 sic@
      }
      // C107: UEs supporting E-UTRA and GSM and PS handover from E-UTRAN to GERAN and Feature Group Indicator 23
      case (C107){
        v_ApplCond := pc_GERAN and pc_E_UTRAN_2_GERAN_PSHO and pc_FeatrGrp_23;
      }
      // C109: UEs supporting E-UTRA and IMS emergency call and establishing the emergency call using the CS domain in UTRA or GERAN or 1xRTT
      case (C109){
        v_ApplCond :=  pc_IMS_emergency_call and (pc_CS_Em_Call_in_UTRA or pc_CS_Em_Call_in_GERAN or pc_CS_Em_Call_in_1xRTT) ;
      }
      // C110: UEs supporting E-UTRA and GERAN and CS fallback and PS handover from E-UTRAN to GERAN and Feature Group Indicator 23 and speech
      case (C110){
        v_ApplCond :=  pc_E_UTRAN_2_GERAN_PSHO and pc_FeatrGrp_23 and pc_GERAN and pc_CS_Fallback and pc_Speech;
      }
      // C111: UEs supporting E-UTRA and GERAN and EDTM and CS fallback and PS handover from E-UTRAN to GERAN and Feature Group Indicator 23 and speech
      case (C111){
        v_ApplCond :=  pc_EDTM and pc_E_UTRAN_2_GERAN_PSHO and pc_FeatrGrp_23 and pc_GERAN and pc_CS_Fallback and pc_Speech;
      }
      // C112: UEs supporting E-UTRA and  UTRA and Feature Group Indicator 7, 8 and 22 and SRVCC and IMS voice
      case (C112){
        v_ApplCond :=  pc_UTRA and pc_FeatrGrp_7 and pc_FeatrGrp_8 and pc_FeatrGrp_22 and pc_FeatrGrp_27 and pc_SRVCC_GERAN_UTRAN and pc_VoLTE;
      }
      // C114: UEs supporting E-UTRA and GSM and  CCN towards E-UTRAN, E-UTRAN Neighbour Cell measurement reporting and Network controlled cell reselection to E-UTRAN
      case (C114){
        v_ApplCond :=   pc_GERAN and pc_GERAN_2_E_UTRAN_measreporting_CCN;
      }
      // C115: UEs supporting E-UTRA and GERAN and speech
      case (C115){
        v_ApplCond :=   ( pc_GERAN and pc_Speech);
      }
      // C118: UEs supporting E-UTRA and allowed CSG list and Feature Group Indicator 25
      // C116: UEs supporting E-UTRA and 1xRTT and 1xCS fallback
      case (C116) {
       v_ApplCond :=   ( pc_1xRTT and pc_Enhanced_1xCSfallback);
      }
      // C117: UEs supporting E-UTRA and UTRA  and HS-PDSCH and E-DPDCH  and Feature Group Indicator 8 and Feature Group Indicator 22
      case (C117) {
       v_ApplCond :=   ( pc_UTRA and (( pc_HSDPA and pc_HSUPA)) and pc_FeatrGrp_8 and pc_FeatrGrp_22);
      }
      case (C118) {
        v_ApplCond :=   ( pc_Allowed_CSG_list and pc_FeatrGrp_25);
      }
      // C119: UEs supporting E-UTRA and UTRA and allowed CSG list and Feature Group Indicator 22
      case (C119) {
       v_ApplCond :=   ( pc_UTRA and pc_Allowed_CSG_list and pc_FeatrGrp_22);
      }
      // C120: UEs supporting E-UTRA and Feature Group Indicator 3 and Feature Group Indicator 7 and ROHC profile0x0001 and ROHC profile0x0002
      case (C120) {
       v_ApplCond :=   (pc_FeatrGrp_3 and pc_FeatrGrp_7 and pc_ROHC_profile0x0001 and pc_ROHC_profile0x0002);
      }
      // C121: UEs supporting E-UTRA and combined EPS/IMSI attach (with or without pre-configuration) and UTRA
      case (C121) {
       v_ApplCond :=   (pc_Combined_Attach and pc_UTRA);
      }
      // C122 void
      // C123: UEs supporting E-UTRA and allowed CSG list and combined EPS/IMSI attach (with or without pre-configuration)
      case (C123) {
       v_ApplCond :=   (pc_Allowed_CSG_list and pc_Combined_Attach);
      }
      // C124 void
      // C125: UEs supporting E-UTRA and combined EPS/IMSI attach (with or without pre-configuration) and (CS/PS Mode 2 or CS/PS Mode 1 with IMS Support
      case (C125) {
       v_ApplCond :=   (pc_Combined_Attach and (pc_CS_PS_data_centric or (pc_CS_PS_voice_centric and pc_VoLTE)));
      }
      // C126:UEs supporting E-UTRA and UTRA and supporting Squal based cell reselection to UTRAN from E-UTRAN
      case (C126) {
           v_ApplCond := (pc_UTRA and pc_Squal_based_CellReselection_to_UTRAN_from_E_UTRAN );
      }
      // C127: UEs supporting E-UTRA and UTRA and supporting Squal based cell reselection to E-UTRAN from UTRAN
      case (C127) {
           v_ApplCond := (pc_UTRA and pc_Squal_based_CellReselection_to_E_UTRAN_from_UTRAN );
      }
      // C128: UEs supporting E-UTRA and UTRAN or/and E-UTRA and GERAN, and combined EPS/IMSI attach (with or without pre-configuration
      case (C128) {
       v_ApplCond := (pc_Combined_Attach and (pc_UTRA or pc_GERAN));
      }
      // C129: UEs supporting E-UTRA and CMAS
      case (C129) {
         v_ApplCond := pc_CMAS_Message
      }
      // C130: UEs supporting E-UTRA FDD and E-UTRA TDD and Feature Group Indicator 25 and Feature Group Indicator 30
      case (C130) {
          v_ApplCond := (pc_eFDD and pc_eTDD and pc_FeatrGrp_25 and pc_FeatrGrp_30 );
      }
      // C131: UEs supporting E-UTRA and UTRA and not supporting Squal based cell reselection to E-UTRAN from UTRAN
      case (C131) {
       v_ApplCond := (pc_UTRA and not(pc_Squal_based_CellReselection_to_E_UTRAN_from_UTRAN));
      }
      // UEs supporting E-UTRA and  UTRA and SRVCC and IMS emergency call
      case (C139) {
          v_ApplCond := pc_UTRA and pc_SRVCC_GERAN_UTRAN and pc_IMS_emergency_call;
      }
      // UEs supporting E-UTRA and UTRA and emergency speech
      case (C140) {
          v_ApplCond := pc_UTRA and pc_EmergSpeech;
      }
      // UEs supporting E-UTRA and  combined EPS/IMSI attach (with or without pre-configuration) and CS/PS Mode 2
      case (C141) {
       v_ApplCond := (pc_Combined_Attach and pc_CS_PS_data_centric);
      }
      // UEs supporting E-UTRA FDD and E-UTRA TDD
      case (C142) {
        v_ApplCond :=  pc_eFDD and pc_eTDD;
      }
      // UEs supporting E-UTRA and allowed CSG list and manual CSG selection and EPS attach
      case (C143) {
       v_ApplCond := (pc_Allowed_CSG_list and pc_Manual_CSG_Selection and pc_Attach);
      }
      //UEs supporting E-UTRA and   GERAN and Feature Group Indicator 7, 9, 23 and 27 and  SRVCC from E-UTRAN to GERAN/UTRAN  and  VoLTE in GSMA PRD IR.92: IMS Profile for Voice and SMS
      case (C144) {
          v_ApplCond := pc_GERAN and pc_FeatrGrp_7 and pc_FeatrGrp_9 and pc_FeatrGrp_23 and pc_SRVCC_GERAN_UTRAN and pc_VoLTE;
      }
      // UEs supporting E-UTRA and allowed CSG list
      case (Cxx_R5123551) {
           v_ApplCond := pc_Allowed_CSG_list;
      }
      // UEs supporting E-UTRA and UTRA or/and E-UTRA and GERAN, and, combined EPS/IMSI attach (with or without pre-configuration) and Disable EPS capability
      case (Cxx_R5123628) {
           v_ApplCond := pc_Combined_Attach and pc_EPS_Disable
      }
      // UEs supporting E-UTRA, UTRA and GERAN
      case (Cxx_R5123750){
           v_ApplCond :=  pc_UTRA and pc_GERAN
      }
      case else {
        v_ApplCond := false;
      }
    }
    return v_ApplCond;
  }

  function f_ExecutionGuideline ( charstring p_TestCase ) return boolean
  { /* Set the execution to TRUE or FALSE according to 36.523-3 clause 11 */
    // @sic R5-101050 R5-106675 R5-110803 R5-122121 sic@
    var boolean v_ExecutionGuideline := true;
    
    v_ExecutionGuideline := ( f_ExecutionGuidelineEUTRA ( p_TestCase ) and     // execution guideline from cl 11.1
                              f_ExecutionGuidelineEUTRA_UTRA_GERAN ( p_TestCase ) and   // execution guideline from cl 11.2
                              f_ExecutionGuideline_InterBand ( p_TestCase )      // execution guideline from cl 11.3
                              );
    return v_ExecutionGuideline;
  }

  function f_ExecutionGuidelineEUTRA ( charstring p_TestCase ) return boolean
  { /* Set the execution to TRUE or FALSE according to 36.523-3 clause 11.1 */
    // @sic R5-110803  R5s120227 R5-122121 sic@
    var boolean v_ExecutionGuideline := true;
     
    if ((px_ePrimaryFrequencyBand == 12 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 13) or
        (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 18))
    { // Test cases using more than one radio frequency (acc to 36.523-3 cl 11.1)
        select (p_TestCase) {
          case ("TC_6_1_1_1",
                "TC_6_1_1_2",
                "TC_6_1_1_3",
                "TC_6_1_1_6",
                "TC_6_1_2_7",
                "TC_6_1_2_8",
                "TC_6_1_2_9",
                "TC_6_1_2_11",
                "TC_6_1_2_13",
                "TC_6_1_2_15",
                "TC_6_1_2_17",
                "TC_6_1_2_18",
                "TC_6_3_1",
                "TC_6_3_5",
                "TC_6_3_6",
                "TC_7_1_3_11",
                "TC_8_1_3_4",
                "TC_8_1_3_5",
                "TC_8_2_2_3",
                "TC_8_2_2_4",
                "TC_8_2_2_5",
                "TC_8_2_4_6",
                "TC_8_2_4_17",
                "TC_8_3_1_3",
                "TC_8_3_1_3a",
                "TC_8_3_1_4",
                "TC_8_3_1_6",
                "TC_8_3_1_9",
                "TC_8_3_1_10",
                "TC_8_3_1_11",
                "TC_8_3_1_17",
                "TC_8_3_1_18",
                "TC_8_3_4_2",
                "TC_8_3_4_3",
                "TC_8_6_2_2",
                "TC8_6_2_8",
                "TC_8_6_4_2",
                "TC_8_6_4_3",
                "TC_8_6_4_6",
                "TC_8_6_6_2",
                "TC_8_6_6_3",
                "TC_9_2_1_1_1a",
                "TC_9_2_1_1_7",
                "TC_9_2_1_1_13",
                "TC_9_2_1_1_15",
                "TC_9_2_1_1_16",
                "TC_9_2_1_2_1",
                "TC_9_2_1_2_10",
                "TC_9_2_1_2_12",
                "TC_9_2_1_2_14",
                "TC_9_2_3_2_1",
                "TC_9_2_3_2_12",
                "TC_9_2_3_2_15",
                "TC_9_2_3_2_16",
                "TC_11_2_6",
                "TC_11_2_7",
                "TC_13_4_1_2") { v_ExecutionGuideline := false;}
        } };
    if ((px_ePrimaryFrequencyBand == 6) or
        (px_ePrimaryFrequencyBand == 11) or
        (px_ePrimaryFrequencyBand == 14) or
        (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n25 ) or
        (px_ePrimaryFrequencyBand == 23 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 38 ) or // @sic R5-103813 R5-104796 sic@
        (px_ePrimaryFrequencyBand == 39 ) // @sic R5-120721 sic@
        )
    { // Test cases using more than two radio frequencies (acc to 36.523-3 cl 11.1)
        select (p_TestCase) {
          case ("TC_6_1_1_1",
                "TC_6_1_1_2",
                "TC_6_1_1_3",
                "TC_6_1_1_6",
                "TC_6_1_2_7",
                "TC_6_1_2_8",
                "TC_6_1_2_9",
                "TC_6_1_2_15",
                "TC_8_1_3_5",
                "TC_8_2_4_17",
                "TC_8_3_1_4",
                "TC_8_6_4_3",
                "TC_9_1_2_6",
                "TC_9_2_1_1_1a",
                "TC_9_2_1_1_7",
                "TC_9_2_1_1_15" ) { v_ExecutionGuideline := false; }
        }
    };  // @sic R5s120334 sic@
    if ((px_ePrimaryFrequencyBand == 12 and px_ePrimaryBandChannelBandwidth == n25) or
        (px_ePrimaryFrequencyBand == 19) or
        (px_ePrimaryFrequencyBand == 20) or
        (px_ePrimaryFrequencyBand == 21) or
        (px_ePrimaryFrequencyBand == 34 ))  // @sic R5-104796 sic@
      { // Test cases using more than three radio frequencies (acc to 36.523-3 cl 11.1)
        select (p_TestCase) {
          case ("TC_6_1_1_1",
                "TC_6_1_1_2",
                "TC_6_1_1_6",
                "TC_9_2_1_1_7") { v_ExecutionGuideline := false; }
        }
    }; // @sic R5s120334 sic@

    // ----------------------------------------------------------------------
    // REPLACEMENT OF TC EXECUTION cl 11.1.1
    // ----------------------------------------------------------------------
    if (not(
        (px_ePrimaryFrequencyBand == 12 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 13) or
        (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 18)
        )
        )  // @sic R5s120334 sic@
       {  // Acc to 36.523-3 Table 11.1.1-1
          select (p_TestCase) {
          case ("TC_8_3_1_9a",
                "TC_8_3_1_11a",
                "TC_9_2_1_1_13a",
                "TC_9_2_1_1_16a"
                ){ v_ExecutionGuideline := false; }
        } };

    if (not((px_ePrimaryFrequencyBand == 12 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 13) or
        (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 18) or
        (px_ePrimaryFrequencyBand == 6) or
        (px_ePrimaryFrequencyBand == 11) or
        (px_ePrimaryFrequencyBand == 14) or
        (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n25 ) or
        (px_ePrimaryFrequencyBand == 23 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 38 ) or
        (px_ePrimaryFrequencyBand == 39 )
        ))
      { // Test cases using more than three radio frequencies (acc to 36.523-3 cl 11.1)
        select (p_TestCase) {
          case ("TC_6_1_1_3b",
                "TC_6_1_2_7a",
                "TC_6_1_2_8a",
                "TC_6_1_2_9a",
                "TC_9_2_1_1_1b",
                "TC_9_2_1_1_15a"
                ) { v_ExecutionGuideline := false; }
        }    };
    
    if (not(
        (px_ePrimaryFrequencyBand == 12 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 13) or
        (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 18) or
        (px_ePrimaryFrequencyBand == 6) or
        (px_ePrimaryFrequencyBand == 11) or
        (px_ePrimaryFrequencyBand == 14) or
        (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n25 ) or
        (px_ePrimaryFrequencyBand == 23 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 38 ) or
        (px_ePrimaryFrequencyBand == 39 ) or
        (px_ePrimaryFrequencyBand == 12 and px_ePrimaryBandChannelBandwidth == n25) or
        (px_ePrimaryFrequencyBand == 19) or
        (px_ePrimaryFrequencyBand == 20) or
        (px_ePrimaryFrequencyBand == 21) or
        (px_ePrimaryFrequencyBand == 34 )
        )
       )  // @sic R5s120334 sic@
      { // Test cases using more than three radio frequencies (acc to 36.523-3 cl 11.1)
        select (p_TestCase) {
          case ("TC_6_1_1_1b",
                "TC_6_1_1_2a",
                "TC_6_1_1_6a",
                "TC_9_2_1_1_7a"
                ) { v_ExecutionGuideline := false; }
        }    };
    return v_ExecutionGuideline;
  }
 
 
  function f_ExecutionGuidelineEUTRA_UTRA_GERAN (charstring p_TestCase ) return boolean
  { /* Set the execution to TRUE or FALSE according to 36.523-3 clause cl 11.2 */
    var boolean v_ExecutionGuideline := true;

   select (p_TestCase) {
         // Test cases using px_RATComb_Tested: execution depends on px_RATComb_Tested value used
          case ( "TC_9_2_1_1_11",
          "TC_9_2_1_1_12",
          "TC_9_2_1_2_1b",
          "TC_9_2_1_2_5",
          "TC_9_2_1_2_8",
          "TC_9_2_1_2_9",
          "TC_9_2_1_2_11",
          "TC_9_2_1_2_13",
          "TC_9_2_1_2_15",
          "TC_9_2_3_1_6",
          "TC_9_2_3_1_10",
          "TC_9_2_3_1_11",
          "TC_9_2_3_1_12",
          "TC_9_2_3_1_15",
          "TC_9_2_3_1_15a",
          "TC_9_2_3_1_17",
          "TC_9_2_3_1_18",
          "TC_9_2_3_1_18a",
          "TC_9_2_3_2_1b",
          "TC_9_2_3_2_3",
          "TC_9_2_3_2_5",
          "TC_9_2_3_2_6",
          "TC_9_2_3_2_7",
          "TC_9_2_3_2_8",
          "TC_9_2_3_2_9",
          "TC_9_2_3_2_11",
          "TC_9_2_3_2_13",
          "TC_9_2_3_2_14",
          "TC_9_2_3_3_5",
          "TC_9_2_3_3_5a",
          "TC_9_3_1_4",
          "TC_9_3_1_5",
          "TC_9_3_1_6") {
            if (px_RATComb_Tested==EUTRA_UTRA) {v_ExecutionGuideline := f_ExecutionGuidelineUTRA(p_TestCase);}
            if (px_RATComb_Tested==EUTRA_GERAN) {v_ExecutionGuideline := f_ExecutionGuidelineGERAN(p_TestCase);}
            if (px_RATComb_Tested==EUTRA_Only) {v_ExecutionGuideline := f_ExecutionGuidelineNoUTRA_NoGERAN(p_TestCase);}
            // ----------------------------------------------------------------------
            // REPLACEMENT OF TC EXECUTION cl 11.2.5
            // ----------------------------------------------------------------------
            if ( px_ePrimaryFrequencyBand == px_FDD_OperationBand ) {  // Execution with overlapped bands E-UTRA/UTRA
                if (not( (px_ePrimaryFrequencyBand == 12 and px_ePrimaryBandChannelBandwidth == n50 ) or
                 (px_ePrimaryFrequencyBand == 13) or
                 (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n50 ) or
                 (px_ePrimaryFrequencyBand == 18) or
                 (px_ePrimaryFrequencyBand == 6 ) or
                 (px_ePrimaryFrequencyBand == 11 ) or
                 (px_ePrimaryFrequencyBand == 14 ) or
                 (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n25 ) or
                 (px_ePrimaryFrequencyBand == 23 and px_ePrimaryBandChannelBandwidth == n50 ) or
                 (px_ePrimaryFrequencyBand == 38 ) or
                 (px_ePrimaryFrequencyBand == 39 )))
                 {  // Acc to 36.523-3 Table 11.2.5
                select (p_TestCase) {
                case ("TC_9_2_3_1_15a", "TC_9_2_3_1_18a") { v_ExecutionGuideline := false; }
                } }
            } else {  // Execution with no overlapped bands E-UTRA/UTRA
                if (  not( (px_ePrimaryFrequencyBand == 12 and px_ePrimaryBandChannelBandwidth == n50 ) or
                 (px_ePrimaryFrequencyBand == 13) or
                 (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n50 ) or
                 (px_ePrimaryFrequencyBand == 18) )) {
                  select (p_TestCase) {
                     case ("TC_9_2_3_1_15a", "TC_9_2_3_1_18a") { v_ExecutionGuideline := false; }
                  }
                 }
            }
          }
          case else {
              v_ExecutionGuideline := ( f_ExecutionGuidelineUTRA ( p_TestCase ) and    // execution guideline from cl 11.2.1
                                        f_ExecutionGuidelineGERAN ( p_TestCase ) and   // execution guideline from cl 11.2.2
                                        f_ExecutionGuidelineUTRA_GERAN (p_TestCase)    // execution guideline from cl 11.2.4
                                      );

    if (not((px_ePrimaryFrequencyBand == 12 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 13) or
        (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 18) or
        (px_ePrimaryFrequencyBand == 6) or
        (px_ePrimaryFrequencyBand == 11) or
        (px_ePrimaryFrequencyBand == 14) or
        (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n25 ) or
        (px_ePrimaryFrequencyBand == 23 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 38 ) or
        (px_ePrimaryFrequencyBand == 39 )
        ))
      { // Test cases using more than three radio frequencies (acc to 36.523-3 cl 11.1)
        select (p_TestCase) {
          case ("TC_6_1_1_3b",
                "TC_6_1_2_7a",
                "TC_6_1_2_8a",
                "TC_6_1_2_9a",
                "TC_9_2_1_1_1b",
                "TC_9_2_1_1_15a"
                ) { v_ExecutionGuideline := false; }
        }    };
    

          }
    }
    return v_ExecutionGuideline;
  }

  
  function f_ExecutionGuidelineUTRA ( charstring p_TestCase ) return boolean
  { /* Set the execution to TRUE or FALSE according to 36.523-3 clause 11.2.1 */
    // @sic R5-110803 R5-113734 sic@
    var boolean v_ExecutionGuideline := true;

   if ( px_ePrimaryFrequencyBand == px_FDD_OperationBand ) {
   // OVERLAPPED BANDS cl 11.2.1.1
     if ( (px_ePrimaryFrequencyBand == 12 and px_ePrimaryBandChannelBandwidth == n50 ) or
          (px_ePrimaryFrequencyBand == 13 ) or
          (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n50 ) or
          (px_ePrimaryFrequencyBand == 18 ) )
       {  // UTRA I-RAT test cases using more than 1 frequency (acc to 36.523-3 cl 11.2.1.1)
        select (p_TestCase) {
          case ("TC_6_2_1_2",
                "TC_6_2_1_3",
                "TC_6_2_2_1",
                "TC_6_2_2_5",
                "TC_6_2_2_8",
                "TC_6_2_3_3",
                "TC_6_2_3_3a",
                "TC_6_2_3_4",
                "TC_6_2_3_5",
                "TC_6_2_3_5a",
                "TC_6_2_3_6",
                "TC_6_2_3_13",
                "TC_6_2_3_31",
                "TC_6_2_3_32",
                "TC_6_2_3_33",
                "TC_6_3_3",
                "TC_6_3_4",
                "TC_6_3_7",
                "TC_6_3_8",
                "TC_8_1_3_6",
                "TC_8_1_3_6a",
                "TC_8_1_3_7",
                "TC_8_3_2_3",
                "TC_8_3_2_3a",
                "TC_8_3_2_4",
                "TC_8_3_3_2",
                "TC_8_3_4_4",
                "TC_8_4_1_2",
                "TC_8_4_1_4",
                "TC_8_4_1_5",
                "TC_8_4_2_2",
                "TC_8_4_2_4",
                "TC_8_5_2_1",
                "TC_8_6_3_1",
                "TC_8_6_5_1",
                "TC_8_6_7_1",
                "TC_8_7_1",
                "TC_9_2_1_1_11",
                "TC_9_2_1_1_12",
                "TC_9_2_1_2_1b",
                "TC_9_2_1_2_1c",
                "TC_9_2_1_2_1d",
                "TC_9_2_1_2_5",
                "TC_9_2_1_2_8",
                "TC_9_2_1_2_9",
                "TC_9_2_1_2_11",
                "TC_9_2_1_2_13",
                "TC_9_2_1_2_15",
                "tc_9_2_2_1_10",
                "TC_9_2_3_1_6",
                "TC_9_2_3_1_10",
                "TC_9_2_3_1_11",
                "TC_9_2_3_1_12",
                "TC_9_2_3_1_15",
                "TC_9_2_3_1_15a",
                "TC_9_2_3_1_17",
                "TC_9_2_3_1_18",
                "TC_9_2_3_1_18a",
                "TC_9_2_3_2_1a",
                "TC_9_2_3_2_1b",
                "TC_9_2_3_2_1c",
                "TC_9_2_3_2_3",
                "TC_9_2_3_2_5",
                "TC_9_2_3_2_6",
                "TC_9_2_3_2_7",
                "TC_9_2_3_2_8",
                "TC_9_2_3_2_9",
                "TC_9_2_3_2_11",
                "TC_9_2_3_2_13",
                "TC_9_2_3_2_14",
                "TC_9_2_3_3_1",
                "TC_9_2_3_3_2",
                "TC_9_2_3_3_3",
                "TC_9_2_3_3_4",
                "TC_9_2_3_3_5",
                "TC_9_2_3_3_5a",
                "TC_9_2_3_3_6",
                "TC_9_3_1_4",
                "TC_9_3_1_5",
                "TC_9_3_1_6",
                "tc_11_2_10",
                "tc_11_2_11",
                "TC_13_1_2",
                "TC_13_1_2a",
                "TC_13_1_3",
                "TC_13_1_4",
                "TC_13_1_5",
                "TC_13_1_15",
                "TC_13_1_16",
                "TC_13_3_2_1",
                "TC_13_4_2_1",
                "TC_13_4_2_4",
                "TC_13_4_2_6",
                "TC_13_4_3_1",
                "TC_13_4_3_2",
                "TC_13_4_3_4"
           ) { v_ExecutionGuideline := false; }
        }
       };
    if ((px_ePrimaryFrequencyBand == 6 ) or
        (px_ePrimaryFrequencyBand == 11 ) or
        (px_ePrimaryFrequencyBand == 14 ) or
        (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n25 ) or
        (px_ePrimaryFrequencyBand == 23 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 38 ) or // @sic R5-103813 R5-104796 sic@
        (px_ePrimaryFrequencyBand == 39 ) // @sic R5-120721 sic@
        )
    { // Test cases using more than two radio frequencies (acc to 36.523-3 cl 11.2.1.1)
        select (p_TestCase) {
          case (
          "TC_6_2_1_2",
          "TC_6_2_1_3",
          "TC_9_2_1_2_9",
          "TC_9_2_1_2_11",
          "TC_9_2_1_2_13",
          "TC_9_2_1_2_15",
          "TC_9_2_1_2_18",
          "TC_9_2_3_2_5",
          "TC_9_2_3_2_6",
          "TC_9_2_3_2_7",
          "TC_9_2_3_2_8",
          "TC_9_2_3_2_11",
          "TC_9_2_3_2_13",
          "TC_9_2_3_2_14") { v_ExecutionGuideline := false;}
        }
        };
       if ((px_ePrimaryFrequencyBand == 12 and px_ePrimaryBandChannelBandwidth == n25 ) or
           (px_ePrimaryFrequencyBand == 19  ) or
           (px_ePrimaryFrequencyBand == 20  ) or
           (px_ePrimaryFrequencyBand == 21  ) or
           (px_ePrimaryFrequencyBand == 34 ))
      { // Test cases using more than three radio frequencies (acc to 36.523-3 cl 11.2)
        select (p_TestCase) {
          case ("TC_9_2_1_2_13") { v_ExecutionGuideline := false; }
        }
      };
   } else {
   // NON OVERLAPPED BANDS   cl 11.2.1.2
   // px_ePrimaryFrequencyBand != px_FDD_OperationBand
     if ( (px_ePrimaryFrequencyBand == 12 and px_ePrimaryBandChannelBandwidth == n50  ) or
          (px_ePrimaryFrequencyBand == 13 ) or
          (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n50 ) or
          (px_ePrimaryFrequencyBand == 18 ))
       {  // UTRA I-RAT test cases using more than 1 frequency (acc to 36.523-3 cl 11.2.1.2)
        select (p_TestCase) {
          case ("TC_6_2_1_2",
                "TC_6_2_1_3",
                "TC_9_2_1_2_9",
                "TC_9_2_1_2_11",
                "TC_9_2_1_2_13",
                "TC_9_2_1_2_15",
                "TC_9_2_3_1_18",
                "TC_9_2_3_2_5",
                "TC_9_2_3_2_6",
                "TC_9_2_3_2_7",
                "TC_9_2_3_2_8",
                "TC_9_2_3_2_11",
                "TC_9_2_3_2_13",
                "TC_9_2_3_2_14" ) { v_ExecutionGuideline := false;}
        }
       };
    if ((px_ePrimaryFrequencyBand == 6 ) or
        (px_ePrimaryFrequencyBand == 11 ) or
        (px_ePrimaryFrequencyBand == 14 ) or
        (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n25 ) or
        (px_ePrimaryFrequencyBand == 23 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 38 ) or
        (px_ePrimaryFrequencyBand == 39 )
        )
    { // Test cases using more than two radio frequencies (acc to 36.523-3 cl 11.2.2)
        select (p_TestCase) {
          case ("TC_9_2_1_2_13") { v_ExecutionGuideline := false;}
        }
     };
  }
  return v_ExecutionGuideline;
}
 
  function f_ExecutionGuidelineGERAN (charstring p_TestCase ) return boolean
  {
  /* Set the execution to TRUE or FALSE according to 36.523-3 clause 11.2.2 */
    var boolean v_ExecutionGuideline := true;

    if ((px_ePrimaryFrequencyBand == 12 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 13) or
        (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 18))
    { // Test cases using more than one radio frequency (acc to 36.523-3 cl 11.2.2)
        select (p_TestCase) {
          case ("TC_6_2_1_4",
          "TC_6_2_3_17",
          "TC_6_2_3_18",
          "TC_9_2_1_2_9",
          "TC_9_2_1_2_11",
          "TC_9_2_1_2_13",
          "TC_9_2_3_1_15",
          "TC_9_2_3_1_18",
          "TC_9_2_3_2_5",
          "TC_9_2_3_2_6",
          "TC_9_2_3_2_7",
          "TC_9_2_3_2_8",
          "TC_9_2_3_2_11",
          "TC_9_2_3_2_13",
          "TC_9_2_3_2_14 ") { v_ExecutionGuideline := false;}
        }
      };

    if ((px_ePrimaryFrequencyBand == 6 ) or
        (px_ePrimaryFrequencyBand == 11 ) or
        (px_ePrimaryFrequencyBand == 14 ) or
        (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n25 ) or
        (px_ePrimaryFrequencyBand == 23 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 38 ) or
        (px_ePrimaryFrequencyBand == 39 ))
    { // Test cases using more than one radio frequency (acc to 36.523-3 cl 11.2.2)
        select (p_TestCase) {
          case ( "TC_9_2_1_2_13" ) { v_ExecutionGuideline := false;}
        }
      };

    return v_ExecutionGuideline;
  }

  function f_ExecutionGuidelineNoUTRA_NoGERAN (charstring p_TestCase ) return boolean
  {
  /* Set the execution to TRUE or FALSE according to 36.523-3 clause 11.2.3 */
    var boolean v_ExecutionGuideline := true;

    if ((px_ePrimaryFrequencyBand == 12 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 13) or
        (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 18))
    { // Test cases using more than one radio frequency (acc to 36.523-3 cl 11.3)
        select (p_TestCase) {
          case (  "TC_9_2_3_1_15",  "TC_9_2_3_1_18") { v_ExecutionGuideline := false;}
        }
      };

    return v_ExecutionGuideline;
  }

  function f_ExecutionGuidelineUTRA_GERAN (charstring p_TestCase ) return boolean
  {
  /* Set the execution to TRUE or FALSE according to 36.523-3 clause 11.2.4 */
    var boolean v_ExecutionGuideline := true;

    // OVERLAPPED BANDS cl 11.2.4.1
   if ( px_ePrimaryFrequencyBand == px_FDD_OperationBand ) {
    if ((px_ePrimaryFrequencyBand == 12 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 13) or
        (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 18))
    { // Test cases using more than one radio frequency (acc to 36.523-3 cl 11.2.4.1)
        select (p_TestCase) {
          case (  "TC_6_2_1_1",
          "TC_8_3_2_5",
          "TC_8_3_2_6",
          "TC_9_2_1_2_6",
          "TC_9_2_1_2_7",
          "TC_11_2_8") { v_ExecutionGuideline := false;}
        }
      };
     if ((px_ePrimaryFrequencyBand == 6 ) or
        (px_ePrimaryFrequencyBand == 11 ) or
        (px_ePrimaryFrequencyBand == 14 ) or
        (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n25 ) or
        (px_ePrimaryFrequencyBand == 23 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 38 ) or
        (px_ePrimaryFrequencyBand == 39 ))
    { // Test cases using more than one radio frequency (acc to 36.523-3 cl 11.3)
        select (p_TestCase) {
          case (  "TC_6_2_1_1") { v_ExecutionGuideline := false;}
        }
      };
   } else {
     // NON OVERLAPPED BANDS cl 11.2.4.2
        if ((px_ePrimaryFrequencyBand == 12 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 13) or
        (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 18))
    { // Test cases using more than one radio frequency (acc to 36.523-3 cl 11.2.4.2)
        select (p_TestCase) {
          case (  "TC_6_2_1_1") { v_ExecutionGuideline := false;}
        }
      };
     }
    return v_ExecutionGuideline;
  }
  
  function f_ExecutionGuideline_InterBand (charstring p_TestCase ) return boolean
  {  /* Set the execution to TRUE or FALSE according to 36.523-3 clause 11.3 */
    var boolean v_ExecutionGuideline := true;

    if ((px_ePrimaryFrequencyBand == 12 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 13) or
        (px_ePrimaryFrequencyBand == 17 and px_ePrimaryBandChannelBandwidth == n50 ) or
        (px_ePrimaryFrequencyBand == 18))
    { // Test cases using more than one radio frequency (acc to 36.523-3 cl 11.3)
        select (p_TestCase) {
          case ("TC_6_1_2_15a", "TC_8_1_3_12" ) { v_ExecutionGuideline := false;}
        }
      };

    if ((px_eSecondaryFrequencyBand == 12 and px_eSecondaryBandChannelBandwidth == n50 ) or
        (px_eSecondaryFrequencyBand == 13) or
        (px_eSecondaryFrequencyBand == 17 and px_eSecondaryBandChannelBandwidth == n50 ) or
        (px_eSecondaryFrequencyBand == 18))
    { // Test cases using more than one radio frequency (acc to 36.523-3 cl 11.3)
        select (p_TestCase) {
          case (
            "TC_6_1_1_1a",
            "TC_6_1_1_3a",
            "TC_6_1_1_4a",
            "TC_6_1_2_16",
            "TC_8_1_3_11a",
            "TC_8_2_4_13a",
            "TC_8_2_4_14a",
            "TC_8_3_1_12a",
            "TC_8_3_1_14a",
            "TC_8_6_4_4"
            ) { v_ExecutionGuideline := false;}
        }
      };

    return v_ExecutionGuideline;
  }

}
