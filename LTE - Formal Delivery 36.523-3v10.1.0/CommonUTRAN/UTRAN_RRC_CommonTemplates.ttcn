/******************************************************************************/
// @copyright   Copyright Notification
//   No part may be reproduced except as authorized by written permission.
//   The copyright and the foregoing restriction extend to reproduction in all media.
//   Trademark 2012, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TTA, TTC).
//   All rights reserved.
// @version: 36.523-3v10.1.0
// $Date: 2012-09-03 19:03:24 +0200 (Mon, 03 Sep 2012) $
// $Rev: 7271 $
/******************************************************************************/

module UTRAN_RRC_CommonTemplates {

  import from UTRAN_RRC_ASN1_Definitions language "ASN.1:1997" all;
  import from UTRAN_CommonDefs all;

  template (value) TFCS_ReconfAdd_CtfcSize_Ctfc2Bit_Type cs_TFCS_CtfcSize_Ctfc2Bit(integer p_Ctfc2Bit,
                                                                                   template (omit) PowerOffsetInformation p_PowerOffsetInfo := omit) :=
  { /* @status    APPROVED */
    ctfc2 := p_Ctfc2Bit,
    powerOffsetInformation := p_PowerOffsetInfo
  };

  template (value) TFCS_ReconfAdd_CtfcSize_Ctfc4Bit_Type cs_TFCS_CtfcSize_Ctfc4Bit(integer p_Ctfc4Bit,
                                                                                   template (omit) PowerOffsetInformation p_PowerOffsetInfo := omit) :=
  { /* @status    APPROVED */
    ctfc4 := p_Ctfc4Bit,
    powerOffsetInformation := p_PowerOffsetInfo
  };

  template (value) TFCS_ReconfAdd_CtfcSize_Ctfc6Bit_Type cs_TFCS_ReconfAdd_Ctfc6Bit(TFCS_ReconfAdd_CtfcSize_Ctfc6Bit_Type.ctfc6 p_Ctfc6,
                                                                                    template (omit) PowerOffsetInformation p_PowerOffsetInfo := omit) :=
  { /* @status    APPROVED */
    ctfc6 := p_Ctfc6,
    powerOffsetInformation := p_PowerOffsetInfo
  };

  template (value) TFCS_ReconfAdd_CtfcSize_Ctfc8Bit_Type cs_TFCS_CtfcSize_Ctfc8Bit(integer p_Ctfc8Bit,
                                                                                   template (omit) PowerOffsetInformation p_PowerOffsetInfo := omit) :=
  { /* @status    APPROVED */
    ctfc8 := p_Ctfc8Bit,
    powerOffsetInformation := p_PowerOffsetInfo
  };

  template (value) AccessServiceClass_TDD_LCR_r4 cs_AccessServiceClass_TDD_LCR_r4 :=
  { /* AccessServiceClass for LCR TDD; TDD only */
    /* @status    APPROVED */
    availableSYNC_UlCodesIndics := '11111111'B,
    subchannelSize := {size1 := NULL}
  };

  template (value) CommonTransChTFS cs_PCH_TFS_UE_TDD :=
  { /* TFS for PCH; TDD only */
    /* @status    APPROVED */
    tti := {
      tti20 := {
        {
          rlc_Size := {
            tdd := {
              commonTDD_Choice := {
                octetModeRLC_SizeInfoType1 := {sizeType1 := 28}
              }
            }
          },
          numberOfTbSizeList := { {zero := NULL},
                                  {one := NULL} },
          logicalChannelList := {allSizes := NULL}
        }
      }
    },
    semistaticTF_Information := {
      channelCodingType := {convolutional := half},
      rateMatchingAttribute := 230,
      crc_Size := crc16
    }
  };

  template (value) CommonTransChTFS cs_FACH_TFS_UE_TDD :=
  { /* TFS for FACH; TDD only */
    /* @status    APPROVED */
    tti := {
      tti20 := {
        {
          rlc_Size := {
            tdd := {
              commonTDD_Choice := {
                bitModeRLC_SizeInfo:= {
                  sizeType2 := { part1 := 5,
                                 part2 := 3 }
                }
              }
            }
          },
          numberOfTbSizeList := { {zero := NULL},
                                  {one := NULL},
                                  {small := 2} },
          logicalChannelList := {allSizes := NULL}
        }
      }
    },
    semistaticTF_Information := {
      channelCodingType := {convolutional := half},
      rateMatchingAttribute := 230,
      crc_Size := crc16
    }
  };

  template (value) CommonTransChTFS cs_FACH_TFS_PS_UE_TDD :=
  { /* TFS for PS FACH; TDD only */
    /* @status    APPROVED */
    tti := {
      tti20 := {
        {
          rlc_Size := {
            tdd := {
              commonTDD_Choice := {
                bitModeRLC_SizeInfo := {
                  sizeType2 := { part1 := 5,
                                 part2 := 3 }
                }
              }
            }
          },
          numberOfTbSizeList := { {zero := NULL},
                                  {one := NULL},
                                  {small := 2},
                                  {small := 3},
                                  {small := 4},
                                  {small := 5},
                                  {small := 6} },
          logicalChannelList := {allSizes := NULL}
        }
      }
    },
    semistaticTF_Information := {
      channelCodingType := {convolutional := half},
      rateMatchingAttribute := 230,
      crc_Size := crc16
    }
  };

  template (value) CommonTransChTFS cs_PCH_TFS_UE :=
  { /* @status    APPROVED */
    tti := {
      tti10 := {
        {
          rlc_Size := {
            fdd := {
              octetModeRLC_SizeInfoType2 := {
                sizeType1 := 24
              }
            }
          },
          numberOfTbSizeList := { {zero := NULL},
                                  {one := NULL} },
          logicalChannelList := {allSizes := NULL}
        }
      }
    },
    semistaticTF_Information := {
      channelCodingType := {convolutional := half},
      rateMatchingAttribute := 230,
      crc_Size := crc16
    }
  };

  template (value) CommonTransChTFS cs_FACH_TFS_UE :=
  { /* @status    APPROVED */
    tti := {
      tti10 := {
        {
          rlc_Size := {
            fdd := {
              octetModeRLC_SizeInfoType2 := {
                sizeType1:= 15
              }
            }
          },
          numberOfTbSizeList := { {zero := NULL},
                                  {one := NULL},
                                  {small := 2} },
          logicalChannelList := {allSizes := NULL}
        }
      }
    },
    semistaticTF_Information :=
    {
      channelCodingType := {convolutional := half},
      rateMatchingAttribute := 220,
      crc_Size := crc16
    }
  };

  template (value) CommonTransChTFS cs_FACH_TFS_PS_UE :=
  { /* @status    APPROVED */
    tti := {
      tti10 := {
        {
          rlc_Size := {
            fdd := {
              octetModeRLC_SizeInfoType2 := {
                sizeType2 := 3
              }
            }
          },
          numberOfTbSizeList := { {zero := NULL},
                                  {one := NULL}},
          logicalChannelList := {allSizes := NULL}
        }
      }
    },
    semistaticTF_Information := {
      channelCodingType := {turbo := NULL},
      rateMatchingAttribute := 130,
      crc_Size := crc16
    }
  };

  template (value) CommonTransChTFS cs_RACH_TFS_UE_FDD :=
  { /* @status    APPROVED */
    tti := {
      tti20 := {
        {
          rlc_Size := {
            fdd := {
              octetModeRLC_SizeInfoType2 := {
                sizeType1 := 15
              }
            }
          },
          numberOfTbSizeList := {
            {
              one := NULL
            }
          },
          logicalChannelList := {
            configured := NULL
          }
        },
        {
          rlc_Size := {
            fdd := {
              octetModeRLC_SizeInfoType2 := {
                sizeType2 := 3
              }
            }
          },
          numberOfTbSizeList := {
            {
              one := NULL
            }
          },
          logicalChannelList := {
            configured := NULL
          }
        }
      }
    },
    semistaticTF_Information := {
      channelCodingType := {
        convolutional := half
      },
      rateMatchingAttribute := 150,
      crc_Size := crc16
    }
  };

  template (value) CommonTransChTFS_LCR cs_RACH_TFS_LCR :=
  { /* TFS for RACH; TDD only */
    /* @status    APPROVED */
    tti := {
      tti10 := {
        {
          rlc_Size := {
            tdd := {
              commonTDD_Choice := {
                bitModeRLC_SizeInfo:= {
                  sizeType2 := { part1 := 5,
                                 part2 := 2 }
                }
              }
            }
          },
          numberOfTbSizeList := { {zero := NULL} },
          logicalChannelList := {configured := NULL}
        }
      }
    },
    semistaticTF_Information := {
      channelCodingType := {convolutional := half},
      rateMatchingAttribute := 110,
      crc_Size := crc16
    }
  };

  template (value) PICH_Info_LCR_r4 cs_PichInfo_TDD :=
  { /* TDD only */
    /* @status    APPROVED */
    timeslot := 0,
    pichChannelisationCodeList_LCR_r4 := {
      tsc_PICH1_ChC_TDD,
      tsc_PICH2_ChC
    },
    midambleShiftAndBurstType := {
      midambleAllocationMode := { defaultMidamble := NULL },
      midambleConfiguration := 4
    },
    repetitionPeriodLengthOffset := { rpp64_2 := 0},
    pagingIndicatorLength := pi4,
    n_GAP := f4,
    n_PCH := 2
  };

  template (value) PRACH_RACH_Info_LCR_r4 cs_PRACH_RACH_Info_LCR_r4(TDD_PRACH_CCode_LCR_r4 p_UL_TS_ChannelisationCode,
                                                                    TDD_FPACH_CCode16_r4 p_DL_TS_ChannelisationCode) :=
  { /* PRACH_RACH_Info for LCR TDD; TDD only */
    /* @status    APPROVED */
    sync_UL_Info := {
      sync_UL_Codes_Bitmap := '11111111'B,
      prxUpPCHdes := 15,
      powerRampStep := 3,
      max_SYNC_UL_Transmissions := tr8,
      mmax := 2
    },
    prach_DefinitionList := {
      {
        timeslot := 1,
        prach_ChanCodes_LCR := {p_UL_TS_ChannelisationCode},
        midambleShiftAndBurstType := {
          midambleAllocationMode := {defaultMidamble := NULL},
          midambleConfiguration := 4
        },
        fpach_Info := {
          timeslot := 0,
          channelisationCode := p_DL_TS_ChannelisationCode,
          midambleShiftAndBurstType := {
            midambleAllocationMode := {defaultMidamble := NULL},
            midambleConfiguration := 4
          },
          wi := 4
        }
      }
    }
  };

  template (value) CommonTimeslotInfoSCCPCH cs_CommonTimeslotInfoSCCPCH :=
  { /* CommonTimeslotInfo for SCCPCH; TDD only */
    /* @status    APPROVED */
    secondInterleavingMode := frameRelated,
    tfci_Coding := tfci_bits_16,
    puncturingLimit := pl0_72,
    repetitionPeriodLengthAndOffset := {repetitionPeriod64 := {
        length_ := 58,
        offset := 6
      }
    }
  };

  template (value) DedicatedTransChTFS cs_DCH_60_TFS_UE :=
  { /* transport format set for RAB subflow#3 on dedicated channel used in message sent to UE:
     * TTI = 20 ms;
     * two transport formats: TransportBlocks = 0, TB size = 60 bits; TansportBlock = 1, Size = 60.
     * rlc_Size = TB_Size ( DCH, w/o MUX)
     * coding = convolutional;
     * coding rate = 1/2;
     * CRCsize = N/A;
     * RateMatching = 235 */
    /* @status    APPROVED */
    tti := {
      tti20 := {
        {
          rlc_Size := {
            bitMode := {
              sizeType1:= 60
            }
          },
          numberOfTbSizeList := {
            { zero := NULL },
            { one := NULL }
          },
          logicalChannelList := { allSizes := NULL }
        }
      }
    },
    semistaticTF_Information := {
      channelCodingType := {convolutional := half},
      rateMatchingAttribute := 235,
      crc_Size := crc0
    }
  };

  template (value) DedicatedTransChTFS cs_DCH_81_TFS_UE :=
  { /* @status    APPROVED */
    tti := {
      tti20 := {
        {
          rlc_Size := {
            bitMode := {
              sizeType1:= 81
            }
          },
          numberOfTbSizeList := {{ zero := NULL }},
          logicalChannelList := {
            allSizes := NULL
          }
        },
        {
          rlc_Size := {
            bitMode := {
              sizeType1 := 39
            }
          },
          numberOfTbSizeList := {{ one := NULL }},
          logicalChannelList := {
            allSizes := NULL
          }
        },
        {
          rlc_Size := {
            bitMode := {
              sizeType1:= 81
            }
          },
          numberOfTbSizeList := {{ one := NULL }},
          logicalChannelList := {
            allSizes := NULL
          }
        }
      }
    },
    semistaticTF_Information := {
      channelCodingType := {
        convolutional := third
      },
      rateMatchingAttribute := 200,
      crc_Size := crc12
    }
  };

  template (value) DedicatedTransChTFS cs_DCH_103_TFS_UE :=
  { /* @status    APPROVED */
    tti := {
      tti20 := {
        {
          rlc_Size := {
            bitMode := {
              sizeType1:= 103
            }
          },
          numberOfTbSizeList := {
            { zero := NULL },
            { one := NULL }
          },
          logicalChannelList := {
            allSizes := NULL
          }
        }
      }
    },
    semistaticTF_Information := {
      channelCodingType := {convolutional := third},
      rateMatchingAttribute := 190,
      crc_Size := crc0
    }
  };

  template (value) DedicatedDynamicTF_Info cs_DedicatedDynamicTF_Info_148 :=
  { /* @status    APPROVED */
    rlc_Size := {
      bitMode := {
        sizeType2 := {
          part1 := 2,
          part2 := omit
        }
      }
    },
    numberOfTbSizeList := {
      { zero := NULL },
      { one := NULL }
    },
    logicalChannelList := {
      allSizes := NULL
    }
  };

  template (value) DedicatedTransChTFS cs_DCH_148_TFS_UE_UL_Common(RateMatchingAttribute p_RateMatchingAttribute) :=
  { /* @status    APPROVED */
    tti := {
      tti40 := {
        cs_DedicatedDynamicTF_Info_148
      }
    },
    semistaticTF_Information := {
      channelCodingType := {
        convolutional := third
      },
      rateMatchingAttribute := p_RateMatchingAttribute,
      crc_Size := crc16
    }
  };

  template (value) DedicatedTransChTFS cs_DCH_148_TFS_UE_UL := cs_DCH_148_TFS_UE_UL_Common(170);      /* @status    APPROVED */

  template (value) DedicatedTransChTFS cs_DCH_148_TFS_DL_TDD_UE := cs_DCH_148_TFS_UE_UL_Common(165);  /* @status    APPROVED */

  template (value) DedicatedTransChTFS cs_DCH_148_TTI_10_TFS_UE :=
  { /* @status    APPROVED */
    tti := {
      tti10 := {
        cs_DedicatedDynamicTF_Info_148
      }
    },
    semistaticTF_Information := {
      channelCodingType := {
        convolutional := third
      },
      rateMatchingAttribute := 160,     // dummy value, value is not needed for 13.6 kbps @sic R5s110242 sic@
      crc_Size := crc16
    }
  };

  template (value) DedicatedTransChTFS cs_DCH_148_TTI_20_TFS_UE :=
  { /* @status    APPROVED */
    tti := {
      tti20 := {
        cs_DedicatedDynamicTF_Info_148
      }
    },
    semistaticTF_Information := {
      channelCodingType := {convolutional := third},
      rateMatchingAttribute := 165,
      crc_Size := crc16
    }
  };

  template (value) CommonTransChTFS  cs_BCH_246_TTI_20_TFS_LCR :=
  { /* @status    APPROVED */
    tti := {
      tti20 := {
        {
          rlc_Size := {
            tdd := {
              commonTDD_Choice := {
                bitModeRLC_SizeInfo := {
                  sizeType2 :=
                  {
                    part1 := 14,
                    part2 := 6
                  }
                }
              }
            }
          },
          numberOfTbSizeList := {{ one := NULL }},
          logicalChannelList := {configured := NULL}
        }
      }
    },
    semistaticTF_Information := {
      channelCodingType := {convolutional := third},
      rateMatchingAttribute := 1,
      crc_Size := crc16
    }
  };

  template (value) PowerOffsetInformation cs_PowerOffsetInfo_FDD(integer p_GainFactorBetaC) :=
  { /* @status    APPROVED */
    gainFactorInformation := {
      signalledGainFactors := {
        modeSpecificInfo := {
          fdd := {
            gainFactorBetaC := p_GainFactorBetaC
          }
        },
        gainFactorBetaD := tsc_GainFactorBetaD,
        referenceTFC_ID := 0
      }
    },
    powerOffsetPp_m := omit
  };

  template (value) PowerOffsetInformation cs_PowerOffsetInfoBelow64k := cs_PowerOffsetInfo_FDD(tsc_GainFactorBetaC_Below64k);   /* @status    APPROVED */

  template (value) PowerOffsetInformation cs_PowerOffsetInfoHigher64k := cs_PowerOffsetInfo_FDD(tsc_GainFactorBetaC_Higher64k); /* @status    APPROVED */

  template (value) PowerOffsetInformation cs_PowerOffsetInfoComputed :=
  { /* @status    APPROVED */
    gainFactorInformation := {
      computedGainFactors := 0
    },
    powerOffsetPp_m := omit
  };

  template (value) PowerOffsetInformation cs_PowerOffsetInfo_TDD :=
  { /* @status    APPROVED */
    gainFactorInformation := {
      signalledGainFactors := {
        modeSpecificInfo := {
          tdd := NULL
        },
        gainFactorBetaD := tsc_GainFactorBetaD,
        referenceTFC_ID := 0
      }
    },
    powerOffsetPp_m := omit
  };

  template (value) TFCS cs_TFCS_CmplFACH_Tx(template (omit) PowerOffsetInformation p_PowerOffsetInformation) :=
  { /* @status    APPROVED */
    normalTFCI_Signalling := {
      complete := {
        ctfcSize := {
          ctfc4Bit := {
            cs_TFCS_CtfcSize_Ctfc4Bit(0, cs_PowerOffsetInfoComputed),
            cs_TFCS_CtfcSize_Ctfc4Bit(1, cs_PowerOffsetInfoComputed),
            cs_TFCS_CtfcSize_Ctfc4Bit(2, cs_PowerOffsetInfoComputed),
            cs_TFCS_CtfcSize_Ctfc4Bit(3, cs_PowerOffsetInfoComputed),
            cs_TFCS_CtfcSize_Ctfc4Bit(4, cs_PowerOffsetInfoComputed),
            cs_TFCS_CtfcSize_Ctfc4Bit(5, cs_PowerOffsetInfoComputed),
            cs_TFCS_CtfcSize_Ctfc4Bit(6, cs_PowerOffsetInfoComputed),
            cs_TFCS_CtfcSize_Ctfc4Bit(8, p_PowerOffsetInformation)
          }
        }
      }
    }
  };

  template (value) TFCS cs_TFCS_SCCPCH_LCR :=
  { /* @status    APPROVED */
    normalTFCI_Signalling := {
      complete := {
        ctfcSize := {
          ctfc4Bit := {
            cs_TFCS_CtfcSize_Ctfc4Bit(0),
            cs_TFCS_CtfcSize_Ctfc4Bit(1),
            cs_TFCS_CtfcSize_Ctfc4Bit(2),
            cs_TFCS_CtfcSize_Ctfc4Bit(3),
            cs_TFCS_CtfcSize_Ctfc4Bit(4),
            cs_TFCS_CtfcSize_Ctfc4Bit(5)
          }
        }
      }
    }
  };

  template (value) TFCS cs_TFCS_Cmpl0(template (omit) PowerOffsetInformation p_PowerOffsetInformation) :=
  { /* @status    APPROVED */
    normalTFCI_Signalling := {
      complete := {
        ctfcSize := {
          ctfc2Bit := {
            cs_TFCS_CtfcSize_Ctfc2Bit(0, p_PowerOffsetInformation)
          }
        }
      }
    }
  };

  template (value) TFCS cs_TFCS_Cmpl0_TDD :=
  { /* @status    APPROVED */
    normalTFCI_Signalling := {
      complete := {
        ctfcSize := {
          ctfc2Bit := {
            {
              ctfc2 := 0,
              powerOffsetInformation := {
                gainFactorInformation := {
                  signalledGainFactors := {
                    modeSpecificInfo := {
                      tdd := NULL
                    },
                    gainFactorBetaD := tsc_GainFactorBetaD,
                    referenceTFC_ID := 0
                  }
                },
                powerOffsetPp_m := omit
              }
            }
          }
        }
      }
    }
  };

  template (value) TFCS cs_TFCS_Cmpl0_1_Tx_FDD(template (omit) PowerOffsetInformation p_PowerOffsetInfo) :=
  { /* @status    APPROVED */
    normalTFCI_Signalling := {
      complete := {
        ctfcSize := {
          ctfc2Bit := {
            cs_TFCS_CtfcSize_Ctfc2Bit(0, cs_PowerOffsetInfoComputed),
            cs_TFCS_CtfcSize_Ctfc2Bit(1, p_PowerOffsetInfo)
          }
        }
      }
    }
  };

  template (value) TFCS cs_TFCS_Cmpl0_1_Rx :=
  { /* @status    APPROVED */
    normalTFCI_Signalling := {
      complete := {
        ctfcSize := {
          ctfc2Bit := {
            cs_TFCS_CtfcSize_Ctfc2Bit(0),
            cs_TFCS_CtfcSize_Ctfc2Bit(1)
          }
        }
      }
    }
  };

  template (value) TFCS cs_TFCS_Cmpl0_1_2_Rx :=
  { /* @status    APPROVED */
    normalTFCI_Signalling := {
      complete := {
        ctfcSize := {
          ctfc2Bit := {
            cs_TFCS_CtfcSize_Ctfc2Bit(0),
            cs_TFCS_CtfcSize_Ctfc2Bit(1),
            cs_TFCS_CtfcSize_Ctfc2Bit(2)
          }
        }
      }
    }
  };

  template (value) TFCS cs_TFCS_Cmpl0_1_Tx_TDD :=
  { /* @status    APPROVED */
    normalTFCI_Signalling := {
      complete := {
        ctfcSize := {
          ctfc2Bit := {
            cs_TFCS_CtfcSize_Ctfc2Bit(0),
            cs_TFCS_CtfcSize_Ctfc2Bit(1)
          }
        }
      }
    }
  };

  template (value) DL_CommonInformation_r8 cs_DL_CommonInfoDCH_SRB_FDD(SF512_AndPilot p_Sf,
                                                                       PositionFixedOrFlexible p_FixedFlexible,
                                                                       boolean p_TFCI_Existence) :=
  { /* @status    APPROVED */
    dl_dpchInfoCommon := {
      dl_DPCH_InfoCommon := {
        cfnHandling := { initialise := NULL },
        modeSpecificInfo := {
          fdd := {
            dl_DPCH_PowerControlInfo := {
              modeSpecificInfo := {
                fdd := {
                  dpc_Mode := singleTPC
                }
              }
            },
            powerOffsetPilot_pdpdch := tsc_DPCH_PowerOffsetPILOT,
            dl_rate_matching_restriction := omit,
            spreadingFactorAndPilot := p_Sf,
            positionFixedOrFlexible := p_FixedFlexible,
            tfci_Existence := p_TFCI_Existence
          }
        },
        mac_d_HFN_initial_value := omit
      }
    },
    modeSpecificInfo := {
      fdd := {
        defaultDPCH_OffsetValue := tsc_DefaultDPCH_OffsetValue,
        dpch_CompressedModeInfo := omit,
        tx_DiversityMode := noDiversity
      }
    },
    mac_hsResetIndicator := omit,
    postVerificationPeriod := omit
  };

  template (value) DL_CommonInformation_r8 cs_DL_CommonInfo_TDD :=
  { /* @status    APPROVED */
    dl_dpchInfoCommon := {
      dl_DPCH_InfoCommon := {
        cfnHandling := { initialise := NULL },
        modeSpecificInfo := {
          tdd := {
            dl_DPCH_PowerControlInfo := {
              modeSpecificInfo := {
                tdd := {
                  tpc_StepSizeTDD := tsc_TPC_StepSize_TDD
                }
              }
            }
          }
        },
        mac_d_HFN_initial_value := omit
      }
    },
    modeSpecificInfo := {
      tdd := {
        tddOption := {
          tdd128 := {
            tstd_Indicator := false
          }
        },
        defaultDPCH_OffsetValue := tsc_DefaultDPCH_OffsetValue_TDD
      }
    },
    mac_hsResetIndicator := omit,
    postVerificationPeriod := omit
  };

  template (value) DL_FDPCH_InfoCommon_r6 cs_DL_FDPCH_InfoCommon_r6 :=
  { /* @status    APPROVED */
    cfnHandling := { initialise := NULL },
    dl_FDPCH_PowerControlInfo := {
      modeSpecificInfo := {
        fdd := {
          dpc_Mode := singleTPC
        }
      }
    },
    dl_FDPCH_TPCcommandErrorRate := 4
  };

  template (value) DL_CommonInformation_r8 cs_DL_CommonInformationF_DPCH_FDD :=
  { /* @status    APPROVED */
    dl_dpchInfoCommon := {
      dl_FDPCH_InfoCommon := cs_DL_FDPCH_InfoCommon_r6
    },
    modeSpecificInfo := {
      fdd := {
        defaultDPCH_OffsetValue := tsc_DefaultDPCH_OffsetValue,
        dpch_CompressedModeInfo := omit,
        tx_DiversityMode := noDiversity
      }
    },
    mac_hsResetIndicator := omit,
    postVerificationPeriod := omit
  };

  template (value) DL_DPCH_InfoPerRL_r7 cs_DL_DPCH_InfoPerRL_SRB_FDD(SF512_AndCodeNumber p_SpreadingFactorDPCH,
                                                                     template (omit) SecondaryScramblingCode p_SecScramblingCodeDPCH) :=
  { /* @status    APPROVED */
    fdd := {
      pCPICH_UsageForChannelEst := mayBeUsed,
      dpch_FrameOffset := (( (tsc_DefaultDPCH_OffsetValue*512 ) mod 38400)/256 ),  /* DPCH-FrameOffset = DefaultDPCH-OffsetValueFDD MOD 38400
                                                                                      Actual value DPCH-FrameOffset = IE value * 256
                                                                                      Actual value DefaultDPCH-OffsetValueFDD = IE value * 512 */
      secondaryCPICH_Info := omit,
      dl_ChannelisationCodeList := {
        {
          secondaryScramblingCode := p_SecScramblingCodeDPCH,
          sf_AndCodeNumber := p_SpreadingFactorDPCH,
          scramblingCodeChange := omit
        }
      },
      tpc_CombinationIndex := tsc_TPC_CombinationIndex,
      powerOffsetTPC_pdpdch := omit,
      closedLoopTimingAdjMode := omit
    }
  };

  template (value) DL_DPCH_InfoPerRL_r7 cs_DL_DPCH_InfoPerRL_SRB_TDD :=
  { /* @status    APPROVED */
    tdd := {
      dl_CCTrChListToEstablish := {
        {
          tfcs_ID := 1,
          timeInfo := {
            activationTime := omit,
            durationTimeInfo := omit
          },
          commonTimeslotInfo := {
            secondInterleavingMode := frameRelated,
            tfci_Coding     := tfci_bits_4,
            puncturingLimit := pl1,
            repetitionPeriodAndLength := { repetitionPeriod1:= NULL }
          },
          tddOption := {
            tdd128 := {
              dl_CCTrCH_TimeslotsCodes := {
                firstIndividualTimeslotInfo := {
                  timeslotNumber := 4,
                  tfci_Existence := true,
                  midambleShiftAndBurstType := {
                    midambleAllocationMode := {
                      defaultMidamble := NULL
                    },
                    midambleConfiguration := 8
                  },
                  modulation := mod_QPSK,
                  ss_TPC_Symbols := one,
                  additionalSS_TPC_Symbols := omit
                },
                dl_TS_ChannelisationCodesShort := {
                  codesRepresentation := {
                    bitmap := tsc_DL_DPCH1_ChC_SRB_TDD
                  }
                },
                moreTimeslots := {
                  noMore := NULL
                }
              }
            }
          },
          ul_CCTrChTPCList := omit
        }
      },
      dl_CCTrChListToRemove := omit
    }
  };

  template (value) RB_ActivationTimeInfo cs_RB_ActTimeInfo(integer p_RB_Id,
                                                           RLC_SequenceNumber p_N) :=
  { /* @status    APPROVED */
    rb_Identity := p_RB_Id,
    rlc_SequenceNumber := p_N
  };

  template (value) OctetModeRLC_SizeInfoType1 cs_OctetModeRLC_Size144 :=
  { /* @status    APPROVED */
    sizeType1 := 16 //144 : 128 payload size + 16
  };

  template (value) OctetModeRLC_SizeInfoType1 cs_OctetModeRLC_Size336 :=
  { /* @status    APPROVED */
  //@sic R5s120113 moved from UTRAN_RRC_Templates sic@
    sizeType2 := {  // Actual size = (32 * part1) + 272 + (part2 * 8)
      part1 := 2,
      part2 := omit
    }
  };

  template (value) DL_AM_RLC_Mode_r7 cs_DL_AM_RLC_r7 :=
  { /* @status    APPROVED */
    dl_RLC_PDU_size := {
      fixedSize := cs_OctetModeRLC_Size336
      //@sic R5s120113 sic@
    },
    inSequenceDelivery := true,
    receivingWindowSize := rw128,
    dl_RLC_StatusInfo := {
      timerStatusProhibit := tsp200,
      // timerEPC OMIT
      dummy := omit,
      missingPDU_Indicator := true,
      timerStatusPeriodic := omit
    }
  };

  template (value) DL_AM_RLC_Mode_r7 cds_DL_AM_RLC_SRB_r7 modifies cs_DL_AM_RLC_r7 :=
  { /* @status    APPROVED */
    dl_RLC_PDU_size := {
      fixedSize := cs_OctetModeRLC_Size144  //@sic R5s120113 sic@
    },
    receivingWindowSize := rw32
  };

  template (value) DL_AM_RLC_Mode_r7 cds_DL_AM_RLC_HSDPA modifies cs_DL_AM_RLC_r7 :=
  { /* @status    APPROVED */
    receivingWindowSize := rw768,
    dl_RLC_StatusInfo := {
      timerStatusProhibit := tsp100
    }
  };

  template (value) UL_AM_RLC_Mode cs_UL_AM_RLC :=
  { /* @status    APPROVED */
    transmissionRLC_Discard := {
      noDiscard := dat15
    },
    transmissionWindowSize := tw128,
    timerRST := tr500,
    max_RST := rst4,
    pollingInfo := {
      timerPollProhibit := tpp200,
      timerPoll := tp200,
      poll_PDU := omit,
      poll_SDU := sdu1,
      lastTransmissionPDU_Poll := true,
      lastRetransmissionPDU_Poll := true,
      pollWindow := pw99,
      timerPollPeriodic := omit
    }
  };

  template (value) UL_AM_RLC_Mode cds_UL_AM_RLC_SRB modifies cs_UL_AM_RLC :=
  { /* @status    APPROVED */
    transmissionWindowSize := tw32,
    max_RST := rst1
  };

  template (value) UL_AM_RLC_Mode cds_UL_AM_RLC_HSDPA modifies cs_UL_AM_RLC :=
  { /* @status    APPROVED */
    pollingInfo := {
      timerPollProhibit := tpp100,
      timerPoll := tp100
    }
  };

  template (value) UL_AM_RLC_Mode cds_UL_AM_RLC_HSU modifies cs_UL_AM_RLC :=
  { /* @status    APPROVED */
    transmissionWindowSize := tw256,
    pollingInfo := {
      timerPollProhibit := tpp100,
      timerPoll := tp100
    }
  };

  template (value) TransmissionRLC_Discard cs_TransmissionRLC_Discard_TimerBasedNoExplicit(NoExplicitDiscard p_NoExplicitDiscard := dt50) :=
  { /* @status    APPROVED */
    timerBasedNoExplicit := p_NoExplicitDiscard
  };

  template (value) UL_UM_RLC_Mode cs_UL_UM_RLC_Mode(template (omit) TransmissionRLC_Discard p_TransmissionRLC_Discard := omit) :=
  { /* @status    APPROVED */
    transmissionRLC_Discard := p_TransmissionRLC_Discard
  };

  template (value) DL_UM_RLC_Mode_r6 cs_DL_UM_RLC_Mode_r6(DL_UM_RLC_LI_size p_DL_UM_RLC_LI_size := size7,
                                                          DL_Reception_Window_Size_r6 p_DL_Reception_Window_Size_r6 := size32) :=
  { /* @status    APPROVED */
    dl_UM_RLC_LI_size := p_DL_UM_RLC_LI_size,
    dl_Reception_Window_Size := p_DL_Reception_Window_Size_r6
  };

  template (value) RLC_Info_r7 cs_RLC_InfoAM_Common(template (value) UL_AM_RLC_Mode    p_UL_AM_RLC_Mode,
                                                    template (value) DL_AM_RLC_Mode_r7 p_DL_AM_RLC_Mode) :=
  { /* @status    APPROVED */
    ul_RLC_Mode := {
      ul_AM_RLC_Mode := p_UL_AM_RLC_Mode
    },
    dl_RLC_Mode := {
      dl_AM_RLC_Mode := p_DL_AM_RLC_Mode
    },
    rlc_OneSidedReEst := false,
    altE_bitInterpretation := omit,// not specified in RADIO BEARER SETUP acc. to TS 34.108 ch 9
    useSpecialValueOfHEField := omit//default false
  };

  template (value) RLC_Info_r7 cs_RLC_InfoAM_Def := cs_RLC_InfoAM_Common(cs_UL_AM_RLC, cs_DL_AM_RLC_r7);               /* @status    APPROVED */

  template (value) RLC_Info_r7 cs_RLC_InfoAM_HSU := cs_RLC_InfoAM_Common(cds_UL_AM_RLC_HSU, cds_DL_AM_RLC_HSDPA);      /* @status    APPROVED */

  template (value) RLC_Info_r7 cs_RLC_InfoAM_HSDPA := cs_RLC_InfoAM_Common(cds_UL_AM_RLC_HSDPA, cds_DL_AM_RLC_HSDPA);  /* @status    APPROVED */

  template (value) RLC_Info_r7 cs_RLC_InfoUM_Common(template (value) UL_UM_RLC_Mode    p_UL_UM_RLC_Mode := cs_UL_UM_RLC_Mode,
                                                    template (value) DL_UM_RLC_Mode_r6 p_DL_UM_RLC_Mode := cs_DL_UM_RLC_Mode_r6) :=
  { /* @status    APPROVED */
    ul_RLC_Mode := {
      ul_UM_RLC_Mode := p_UL_UM_RLC_Mode
    },
    dl_RLC_Mode := {
      dl_UM_RLC_Mode := p_DL_UM_RLC_Mode
    },
    rlc_OneSidedReEst := false,
    altE_bitInterpretation := omit,// not specified in RADIO BEARER SETUP acc. to TS 34.108 ch 9
    useSpecialValueOfHEField := omit//default false
  };

  template (value) RLC_Info_r7 cs_RLC_InfoTM_Def :=
  { /* @status    APPROVED */
    ul_RLC_Mode := {
      ul_TM_RLC_Mode := {
        transmissionRLC_Discard := omit,
        segmentationIndication := false
      }
    },
    dl_RLC_Mode := {
      dl_TM_RLC_Mode := {
        segmentationIndication := false
      }
    },
    rlc_OneSidedReEst := false,
    altE_bitInterpretation := omit,
    useSpecialValueOfHEField := omit
  };

}
