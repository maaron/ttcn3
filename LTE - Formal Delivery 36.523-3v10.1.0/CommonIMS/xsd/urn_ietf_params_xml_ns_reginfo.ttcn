/******************************************************************************/
// @copyright   Copyright Notification
//   No part may be reproduced except as authorized by written permission.
//   The copyright and the foregoing restriction extend to reproduction in all media.
//   Trademark 2012, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TTA, TTC).
//   All rights reserved.
// @version: LTE_IWD_12wk36
/******************************************************************************/

/*
 * Old type definition file copied and adapted from ATS release December 2010
 * This file should be automatically generated from the original XSD file.
 * XSD file: reginfo.xsd
 */

module urn_ietf_params_xml_ns_reginfo {
import from XSDAUX all;
group XSDAUXtmp {
  // 45. any String
   type set of string Any;
    
   // 46. namespaces
   type set of charstring Namespaces;
}
  
// [RFC 3680]
    type set of registrationInfo Registrations;
    type string reginfoAttribute;

    type record reginfoSequence {
        Registrations registration,
        Any anyName optional
    }

    type set Reginfo { // [olaf]old name 'reginfoElement' replaced
        reginfoSequence sequence,
        nonNegativeInteger version,
        reginfoAttribute state,
        Namespaces namespaces optional
    }

    type set of contactElement Contacts;
    type string registration_stateAttribute;

    type record registrationSequence {
        Contacts contact,
        Any anyName optional
    }

    type set registrationInfo {
        registrationSequence sequence,
        anyURI aor,
        string id,
        registration_stateAttribute state
    }

    type set struct_display_name {
        string baseType,
        langAttribute displayname_lang optional
    }

    type set unknownParam {
        string baseType,
        string name
    }

    type set of unknownParam struct_unknown_param;
    type string contact_state_Attribute;
    type string contact_event_Attribute;

    type record contactSequence {
        anyURI uri,
        struct_display_name display_name optional,
        struct_unknown_param unknown_param,
        Any anyName optional
    }

    type set contactElement {
        contactSequence sequence,
        contact_state_Attribute state,
        contact_event_Attribute event,
        unsignedLong duration_registered optional,
        unsignedLong expires optional,
        unsignedLong retry_after optional,
        string id,
        string q optional,
        string callid optional,
        unsignedLong cseq optional,
        pubGruu pub_gruu optional, // @sic R5-073440 sic@, extension to support GRUU [FFS]
        tempGruu temp_gruu optional // @sic R5-073440 sic@, extension to support GRUU [FFS]
    }

// [end of RFC 3680]

// [draft-ietf-sipping-gruu-reg-event-09]

   type anyURI pubGruu; //[FFS]

   type set tempGruu {   // [FFS]
       anyURI baseType,
       unsignedLong first_cseq
   }

// [end of draft-ietf-sipping-gruu-reg-event-09]

   type union langAttribute {
        languageXSD union1,
        string union2
   }

   type NCName spaceAttribute;

   type anyURI baseAttribute;

   type ID idAttribute;

   type set specialAttrsAttributeGroup {
       baseAttribute specialAttrs_base optional,
       langAttribute specialAttrs_lang optional,
       spaceAttribute specialAttrs_space optional
   }

    // [3GPP IM CN subsystem XML body]
    //  <?xml version="1.0" ?>
    //  <!-- Draft DTD for the IMS XML body. -->
    //
    //  <!DOCTYPE ims-3gpp [
    //   <!-- ims-3gpp element: root element -->
    //
    //   <!ELEMENT ims-3gpp (
    //     alternative-service?, service-info?)>
    //   <!ATTLIST ims-3gpp version CDATA #REQUIRED>
    //
    //    <!-- service-info element: The transparent data received from HSS for AS -->
    //    <!ELEMENT service-info                (#CDATA)>
    //
    //    <!-- alternative-service: alternative-service used in emergency sessions -->
    //    <!ELEMENT alternative-service (type, reason)>
    //    <!ELEMENT type                    (emergency)>
    //    <!ELEMENT reason              (#PCDATA)>
    //
    //  ]>
    type record IMCN_Subsystem_XMLBody {
        AlternativeService alternativeService optional,
        charstring serviceInfo optional,
        integer version
    }

    type record AlternativeService {
        charstring typeName ("emergency"),
        charstring reason
    }

    // RFC 4575 Event Package for Conference State (FFS)
    type record ConferenceInfoElement {
        ConferenceDesc confDesc,
        ConferenceHostInfo hostInfo,
        ConferenceState confState,
        ConferenceUsers confUsers,
        Namespaces namespaces optional

    }
    type record ConferenceDesc { // FFS
    }
    type record ConferenceHostInfo { // FFS
    }
    type record ConferenceState { // FFS
    }
    type record ConferenceUsers { // FFS
    }
    // End of RFC 4575
}
