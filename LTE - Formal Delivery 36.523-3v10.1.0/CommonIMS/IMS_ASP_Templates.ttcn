/******************************************************************************/
// @copyright   Copyright Notification
//   No part may be reproduced except as authorized by written permission.
//   The copyright and the foregoing restriction extend to reproduction in all media.
//   Trademark 2012, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TTA, TTC).
//   All rights reserved.
// @version: 36.523-3v10.1.0
// $Date: 2012-07-26 21:54:35 +0200 (Thu, 26 Jul 2012) $
// $Rev: 7058 $
/******************************************************************************/

module IMS_ASP_Templates {
  import from LibSip_SIPTypesAndValues all;
  import from IP_ASP_TypeDefs all;
  import from IMS_ASP_TypeDefs all;
  import from CommonDefs all;

  //****************************************************************************
  // ASPs to send/receive IMS messages
  //----------------------------------------------------------------------------

  template (value) IMS_RoutingInfo_Type cs_IMS_RoutingInfo(IMS_ProtectedUnprotected_Type p_ProtectedUnprotected,
                                                           InternetProtocol_Type p_Protocol,
                                                           template (omit) IP_AddrInfo_Type p_UE_Address := omit,
                                                           template (omit) IP_AddrInfo_Type p_NW_Address := omit) :=
  {
    Security := p_ProtectedUnprotected,
    Protocol := p_Protocol,
    UE_Address := p_UE_Address,
    NW_Address := p_NW_Address
  };

  template IMS_RoutingInfo_Type cr_IMS_RoutingInfo(template (present) IMS_ProtectedUnprotected_Type p_ProtectedUnprotected,
                                                   template (present) InternetProtocol_Type p_Protocol := ?) :=
  {
    Security := p_ProtectedUnprotected,
    Protocol := p_Protocol,
    UE_Address := ?,
    NW_Address := ?
  };

  //----------------------------------------------------------------------------

  template IMS_DATA_REQ cr_IMS_DATA_REQ_Any := ?;

  template IMS_DATA_REQ car_IMS_Register_Request(template (present) IMS_RoutingInfo_Type p_RoutingInfo,
                                                 template (present) REGISTER_Request p_RegisterRequest := ?) :=
  {
    RoutingInfo := p_RoutingInfo,
    Request := {
      Register := p_RegisterRequest
    }
  };
  
  template IMS_DATA_RSP cr_IMS_DATA_RSP_Any := ?;

  template IMS_DATA_REQ car_IMS_Subscribe_Request(template (present) IMS_RoutingInfo_Type p_RoutingInfo,
                                                 template (present) SUBSCRIBE_Request p_SubscribeRequest := ?) :=
  {
    RoutingInfo := p_RoutingInfo,
    Request := {
      Subscribe := p_SubscribeRequest
    }
  };
  
  template (value) IMS_DATA_REQ cas_IMS_Notify_Request(template (value) IMS_RoutingInfo_Type p_RoutingInfo,
                                                 template (value) NOTIFY_Request p_NotifyRequest) :=
  {
    RoutingInfo := p_RoutingInfo,
    Request := {
      Notify := p_NotifyRequest
    }
  };
  
  //----------------------------------------------------------------------------

  template (value) IMS_DATA_REQ cas_IMS_DATA_REQ(template (value) IMS_RoutingInfo_Type p_RoutingInfo,
                                                 template (value) IMS_Request_Type p_Request) :=
  {
    RoutingInfo := p_RoutingInfo,
    Request := p_Request
  };

  template (value) IMS_DATA_RSP cas_IMS_DATA_RSP(template (value) IMS_RoutingInfo_Type p_RoutingInfo,
                                                 template (value) IMS_Response_Type p_Response) :=
  {
    RoutingInfo := p_RoutingInfo,
    Response := p_Response
  };

  template IMS_DATA_RSP car_IMS_DATA_RSP (template (present) IMS_RoutingInfo_Type p_RoutingInfo,
                                          template (present) IMS_Response_Type p_Response) :=
  {
    RoutingInfo := p_RoutingInfo,
    Response := p_Response
  };

  //----------------------------------------------------------------------------

  template IMS_DATA_REQ car_IMS_Ack_Request(template (present) IMS_RoutingInfo_Type p_RoutingInfo,
                                            template (present) ACK_Request p_AckRequest := ?) :=
  {
    RoutingInfo := p_RoutingInfo,
    Request := {
      Ack := p_AckRequest
    }
  };

  template IMS_DATA_REQ car_IMS_Prack_Request(template (present) IMS_RoutingInfo_Type p_RoutingInfo,
                                            template (present) PRACK_Request p_PrackRequest := ?) :=
  {
    RoutingInfo := p_RoutingInfo,
    Request := {
      Prack := p_PrackRequest
    }
  };

  template (value) IMS_DATA_REQ cas_IMS_Prack_Request(template (value) IMS_RoutingInfo_Type p_RoutingInfo,
                                            template (value) PRACK_Request p_PrackRequest ) :=
  {
    RoutingInfo := p_RoutingInfo,
    Request := {
      Prack := p_PrackRequest
    }
  };

  template (value) IMS_DATA_REQ cas_IMS_Ack_Request(template (value) IMS_RoutingInfo_Type p_RoutingInfo,
                                            template (value) ACK_Request p_AckRequest ) :=
  {
    RoutingInfo := p_RoutingInfo,
    Request := {
      Ack := p_AckRequest
    }
  };

  template IMS_DATA_REQ car_IMS_Update_Request(template (present) IMS_RoutingInfo_Type p_RoutingInfo,
                                            template (present) UPDATE_Request p_UpdateRequest := ?) :=
  {
    RoutingInfo := p_RoutingInfo,
    Request := {
      Update := p_UpdateRequest
    }
  };

  template (value) IMS_DATA_REQ cas_IMS_Update_Request(template (value) IMS_RoutingInfo_Type p_RoutingInfo,
                                               template (value) UPDATE_Request p_UpdateRequest ) :=
  {
    RoutingInfo := p_RoutingInfo,
    Request := {
      Update := p_UpdateRequest
    }
  };

  
  template IMS_DATA_REQ car_IMS_Invite_Request(template (present) IMS_RoutingInfo_Type p_RoutingInfo,
                                               template (present) INVITE_Request p_InviteRequest := ?) :=
  {
    RoutingInfo := p_RoutingInfo,
    Request := {
      Invite := p_InviteRequest
    }
  };
  template (value) IMS_DATA_REQ cas_IMS_Invite_Request(template (value) IMS_RoutingInfo_Type p_RoutingInfo,
                                               template (value) INVITE_Request p_InviteRequest ) :=
  {
    RoutingInfo := p_RoutingInfo,
    Request := {
      Invite := p_InviteRequest
    }
  };
  
  template IMS_DATA_REQ car_IMS_Bye_Request(template (present) IMS_RoutingInfo_Type p_RoutingInfo,
                                            template (present) BYE_Request p_ByeRequest := ?) :=
  {
    RoutingInfo := p_RoutingInfo,
    Request := {
      Bye := p_ByeRequest
    }
  };
  
  template (value) IMS_DATA_REQ cas_IMS_BYE_Request(template (value) IMS_RoutingInfo_Type p_RoutingInfo,
                                                    template (value) BYE_Request p_ByeRequest ) :=
  {
    RoutingInfo := p_RoutingInfo,
    Request := {
      Bye := p_ByeRequest
    }
  };

  template IMS_DATA_REQ car_IMS_Publish_Request(template (present) IMS_RoutingInfo_Type p_RoutingInfo,
                                                template (present) PUBLISH_Request p_PublishRequest := ?) :=
  {
    RoutingInfo := p_RoutingInfo,
    Request := {
      Publish := p_PublishRequest
    }
  };
  
  template IMS_DATA_REQ car_IMS_Message_Request(template (present) IMS_RoutingInfo_Type p_RoutingInfo,
                                                template (present) MESSAGE_Request p_MessageRequest := ?) :=
  {
    RoutingInfo := p_RoutingInfo,
    Request := {
      Message := p_MessageRequest
    }
  };
  
  template (value) IMS_DATA_REQ cas_IMS_Message_Request(template (value) IMS_RoutingInfo_Type p_RoutingInfo,
                                                        template (value) MESSAGE_Request p_MessageRequest ) :=
  {
    RoutingInfo := p_RoutingInfo,
    Request := {
      Message := p_MessageRequest
    }
  };
  
  //****************************************************************************
  // Auxiliary function
  //----------------------------------------------------------------------------

  function f_IMS_Request_GetMessageHeader(IMS_Request_Type p_Request) return MessageHeader
  {
    var MessageHeader v_MessageHeader;

    if      (ischosen(p_Request.Register))  { v_MessageHeader := p_Request.Register.msgHeader;  }
    else if (ischosen(p_Request.Invite))    { v_MessageHeader := p_Request.Invite.msgHeader;    }
    else if (ischosen(p_Request.Options))   { v_MessageHeader := p_Request.Options.msgHeader;   }
    else if (ischosen(p_Request.Bye))       { v_MessageHeader := p_Request.Bye.msgHeader;       }
    else if (ischosen(p_Request.Cancel))    { v_MessageHeader := p_Request.Cancel.msgHeader;    }
    else if (ischosen(p_Request.Ack))       { v_MessageHeader := p_Request.Ack.msgHeader;       }
    else if (ischosen(p_Request.Prack))     { v_MessageHeader := p_Request.Prack.msgHeader;     }
    else if (ischosen(p_Request.Notify))    { v_MessageHeader := p_Request.Notify.msgHeader;    }
    else if (ischosen(p_Request.Subscribe)) { v_MessageHeader := p_Request.Subscribe.msgHeader; }
    else if (ischosen(p_Request.Publish))   { v_MessageHeader := p_Request.Publish.msgHeader;   }
    else if (ischosen(p_Request.Update))    { v_MessageHeader := p_Request.Update.msgHeader;    }
    else if (ischosen(p_Request.Refer))     { v_MessageHeader := p_Request.Refer.msgHeader;     }
    else if (ischosen(p_Request.Message))   { v_MessageHeader := p_Request.Message.msgHeader;   }
    else { FatalError(__FILE__, __LINE__, "unknown SIP message"); }

    return v_MessageHeader;
  }
}
