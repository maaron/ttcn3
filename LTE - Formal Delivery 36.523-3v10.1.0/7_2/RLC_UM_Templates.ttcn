/******************************************************************************/
// @copyright   Copyright Notification
//   No part may be reproduced except as authorized by written permission.
//   The copyright and the foregoing restriction extend to reproduction in all media.
//   Trademark 2012, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TTA, TTC).
//   All rights reserved.
// @version: 36.523-3v10.1.0
// $Date: 2010-10-22 12:35:29 +0200 (Fri, 22 Oct 2010) $
// $Rev: 4112 $
/******************************************************************************/

module RLC_UM_Templates {

  import from EUTRA_RRC_ASN1_Definitions language "ASN.1:1997" all;
  import from EUTRA_ASP_DrbDefs all;
  import from EUTRA_ASP_TypeDefs all;
  import from EUTRA_AspCommon_Templates all;
  import from EUTRA_DRB_Templates all;
  import from L2_CommonTemplates all;
  import from RLC_Common all;

group RLCUMTemplates {

template (value) DL_UM_RLC cds_RX_UM_RLC_DRB_SN10_tReord100ms modifies cs_508_DRB_DL_UM_RLC :=
{ /* @status    APPROVED */
  t_Reordering := ms100
};

template (value) DL_UM_RLC cds_RX_UM_RLC_DRB_SN10_tReord200ms modifies cs_508_DRB_DL_UM_RLC :=
{ /* @status    APPROVED */
  t_Reordering := ms200
};

template (value) RLC_UMD_PDU_Type cs_UMD_PDU_NoLIs_SN5(integer p_SN,
                                                       RLC_FramingInfo_Type p_FramingInfo,
                                                       RLC_DataFieldList_Type p_Data) :=
{ /* @status    APPROVED */
  ShortSN := {
    Header := {
      FixPart := {
        FramingInfo :=  p_FramingInfo,
        Extension := tsc_E_Data,
        SequenceNumber := int2bit (p_SN, tsc_UM_SN_Size_5)
      },
      FlexPart := omit
    },
    Data := p_Data
  }
};

template (value) RLC_UMD_PDU_Type cs_UMD_PDUoneSDU_SN5(integer p_SN,
                                                       RLC_DataFieldList_Type p_RLC_SduData) :=
  /* serves to transmit one SDU in one UMD PDU */
  /* @status    APPROVED */
  cs_UMD_PDU_NoLIs_SN5(p_SN, tsc_FI_FullSDU, p_RLC_SduData);

template RLC_UMD_PDU_Type cr_UMD_PDUoneSDU_SN10(integer p_SN,
                                                RLC_DataFieldList_Type p_RLC_SduData) :=
  /* serves to receive one SDU in one UMD PDU */
  /* @status    APPROVED */
  cr_UMD_PDU_SN10 (p_SN, tsc_FI_FullSDU, p_RLC_SduData);

template  RLC_UMD_PDU_Type cr_UMD_PDU_LIs_SN10 (integer p_SN,
                                                template RLC_FramingInfo_Type p_FramingInfo,
                                                template RLC_PDU_Header_FlexPart_Type p_Header_FlexPart,
                                                template RLC_DataFieldList_Type p_Data) :=
{ /* @status    APPROVED */
  LongSN := {
    Header := {
      FixPart := {
        Reserved := tsc_B3_Reserved,
        FramingInfo :=  p_FramingInfo,
        Extension := tsc_E_BitAndLI,
        SequenceNumber := int2bit (p_SN, tsc_UM_SN_Size_10)
      },
      FlexPart := p_Header_FlexPart
    },
    Data := p_Data
  }
};

template RLC_UMD_PDU_Type cr_UMD_PDU_SN5(integer p_SN,
                                         template RLC_FramingInfo_Type p_FI,
                                         template RLC_DataFieldList_Type p_RLC_SduData) :=
{ /* @status    APPROVED */
  ShortSN := {
    Header := {
      FixPart := {
        FramingInfo :=  p_FI,
        Extension := tsc_E_Data,
        SequenceNumber := int2bit (p_SN, tsc_UM_SN_Size_5)
      },
      FlexPart := omit
    },
    Data := p_RLC_SduData
  }
};

template RLC_UMD_PDU_Type cr_UMD_PDUoneSDU_SN5(integer p_SN,
                                               RLC_DataFieldList_Type p_RLC_SduData) :=
  /* @status    APPROVED */
  cr_UMD_PDU_SN5(p_SN, tsc_FI_FullSDU, p_RLC_SduData);

template  RLC_UMD_PDU_Type cr_UMD_PDU_LIs_SN5 (integer p_SN,
                                               template RLC_FramingInfo_Type p_FramingInfo,
                                               template RLC_PDU_Header_FlexPart_Type p_Header_FlexPart,
                                               template RLC_DataFieldList_Type p_Data) :=
{ /* @status    APPROVED */
  ShortSN := {
    Header := {
      FixPart := {
        FramingInfo :=  p_FramingInfo,
        Extension := tsc_E_BitAndLI,
        SequenceNumber := int2bit (p_SN, tsc_UM_SN_Size_5)
      },
      FlexPart := p_Header_FlexPart
    },
    Data := p_Data
  }
};

template (value) RLC_UMD_PDU_Type cs_UMD_PDU_LIs_SN10 (integer p_SN,
                                                       RLC_FramingInfo_Type p_FramingInfo,
                                                       template (omit) RLC_PDU_Header_FlexPart_Type p_Header_FlexPart,
                                                       RLC_DataFieldList_Type p_Data) :=
{ /* serves to transmit one UMD PDU with Length Indicators */
  /* @status    APPROVED */
  LongSN := {
    Header := {
      FixPart := {
        Reserved := tsc_B3_Reserved,
        FramingInfo :=  p_FramingInfo,
        Extension := tsc_E_BitAndLI,
        SequenceNumber := int2bit (p_SN, tsc_UM_SN_Size_10)
      },
      FlexPart := p_Header_FlexPart
    },
    Data := p_Data
  }
};

template (value) RLC_UMD_PDU_Type cs_UMD_PDU_LIs_SN5 (integer p_SN,
                                                      RLC_FramingInfo_Type p_FramingInfo,
                                                      template (omit) RLC_PDU_Header_FlexPart_Type p_Header_FlexPart,
                                                      RLC_DataFieldList_Type p_Data) :=
{ /* @status    APPROVED */
  ShortSN := {
    Header := {
      FixPart := {
        FramingInfo :=  p_FramingInfo,
        Extension := tsc_E_BitAndLI,
        SequenceNumber := int2bit (p_SN, tsc_UM_SN_Size_5)
      },
      FlexPart := p_Header_FlexPart
    },
    Data := p_Data
  }
};

template (value) RLC_Configuration_Type cs_RLC_Configuration_UM_SN5 :=
{ // @sic R5s100076 sic@
  /* @status    APPROVED */
  Rb := {
    UM := {
      Tx := cs_UL_UM_RLC_r8(cds_TX_UM_RLC_DRB_SN5),
      Rx := cs_DL_UM_RLC_r8(cds_RX_UM_RLC_DRB_SN5)
    }
  },
  TestMode := {
    None := true
  }
};

} // end of group RLCUMTemplates

}
