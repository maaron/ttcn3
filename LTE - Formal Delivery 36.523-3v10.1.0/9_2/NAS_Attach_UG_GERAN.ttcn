// ***************************************************************************
// @copyright   Copyright Notification
//   No part may be reproduced except as authorized by written permission.
//   The copyright and the foregoing restriction extend to reproduction in all media.
//   Trademark 2012, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TTA, TTC).
//   All rights reserved.
// @version: 36.523-3v10.1.0
// * $Date: 2012-08-31 18:43:13 +0200 (Fri, 31 Aug 2012) $
// * $Rev: 7239 $
// ***************************************************************************

module NAS_Attach_UG_GERAN {

  import from CommonDefs all;
  import from CommonIratDefs all;
  import from GERAN_CellInfo all;
  import from GERAN_CommonFunctions all;
  import from GERAN_Component all;
  import from GERAN_Parameters all;
  import from GERAN_Templates all;
  import from GERAN_TypeDefs all;
  import from NAS_24008Templates all;
  import from NAS_24008TypeDefs all;
  import from NAS_AuxiliaryDefsAndFunctions all;
  import from NAS_CommonTemplates all;
  import from NAS_CommonTypeDefs all;
  import from Parameters all;
  import from UTRANGERAN_CommonFunctions all;
  import from UpperTesterFunctions all;

  function f_TC_9_2_1_1_11_GERAN () runs on GERAN_PTC
  { /* Test Purpose (see f_TC_9_2_1_1_11_EUTRA) */
    /* @sic R5-113696: pc_GERAN and px_RATComb_Tested are checked at top-level sic@ */

    var G_LLC_DATAMESSAGE_IND v_LLCDataInd;
    var octetstring v_PLMN;
    var O1_Type v_RAC;
    var O2_Type v_LAC;
    var template (omit) MobileIdentity v_TMSI := omit;
    
    f_GERAN_Init(EUTRA_GERAN); // This is still only a 2 PTC test @sic R5s110318 sic@

    v_PLMN := f_GERAN_PLMN_Get(geran_Cell24);
    v_RAC := f_GERAN_RAC_Get(geran_Cell24);
    v_LAC := f_GERAN_LAC_Get(geran_Cell24);
    
    f_GERAN_CreateCell(geran_Cell24);
    
    f_IRAT_WaitForCoOrd_Trigger (EUTRA); // @sic R5s110232 sic@
    // Pre-Preamble on GERAN cell first to set PTSMI, PTSMI Sig and TMSI in USIM
    f_GERAN_Pre_Preamble (geran_Cell24, PS_Only); // @sic R5s110176 sic@
    f_GERAN_InterRAT_InitialiseAuthParams();  // The UE starts in EUTRA, so wait for it to send the Auth Params
    f_GERAN_TestBody_Set( true );
    
    //@siclog "Step 21a1" siclog@
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_ServingCell);
    
    //  Check: Does the UE transmit an ATTACH REQUEST message in the next 30 seconds? (F)
    //@siclog "Step 21a2" siclog@
    f_GERAN_CheckNoAttachOnCell (geran_Cell24, 30.0, "Step 21a2");
    
    //@siclog "Step 21a3" siclog@
    // The operator initiates an attach by MMI or by AT command.
    f_UT_TriggerAttach(UT);
    
    //  Check: Does the UE transmit an ATTACH REQUEST message in the next 30 seconds? (F)
    //@siclog "Step 21a4" siclog@
    f_GERAN_CheckNoAttachOnCell (geran_Cell24, 30.0, "Step 21a4");
    
    //@siclog "Step 21a5" siclog@
    f_UT_SwitchOffUE (UT, false, CNF_REQUIRED); // @sic R5s1100395 sic@
    
    //@siclog "Step 21a6" siclog@
    f_UT_SwitchOnUE (UT, false );
    
    //@siclog "Step 21a7 Void" siclog@
    
    //  Check: Does the UE transmit an ATTACH REQUEST message with IMSI-1and TMSI status indicated invalid TMSI?
    //@siclog "Step 21a8" siclog@
    v_LLCDataInd := f_GPRS_ReceiveUplinkMsg (geran_Cell24, car_G_LLC_UnitData_IND(cr_G_AttachReqWithIMSI(cr_AttachTypeAny, // @sic R5s120050 sic@
                                                                                                         f_Imsi2MobileIdentity(px_IMSI_Def),
                                                                                                         cr_RAI(omit),
                                                                                                         omit))); // @sic R5-113113 sic@
    f_GERAN_PreliminaryPass (__FILE__, __LINE__, "Step 21a8");
    
    if (v_LLCDataInd.unit.msg.attReq.attachType.attachType == tsc_I_AttachTypeCombined) { // @sic R5-123114 sic@
      v_TMSI := cs_MobileIdTMSIorPTMSI('23'O, px_TMSI_Def);
    }
       
    //@siclog "Step 22" siclog@
    f_GERAN_GPRS_Authentication (geran_Cell24);
    // Send GPRS Attach Accept
    f_GPRS_SendDownlinkMsg(geran_Cell24,
                           1,
                           cas_G_LLC_UnitData_Req (f_GERAN_TLLI_Get(geran_Cell24),
                                                   tsc_LLCSapi_GMM,
                                                   tsc_LLC_PM,
                                                   px_GSM_CipheringOnOff,
                                                   cs_G_AttachAccept (cs_GMM_AttachResult(v_LLCDataInd.unit.msg.attReq.attachType.attachType),
                                                                      cs_RAI(omit, cs_LAI(omit, v_PLMN, v_LAC), v_RAC),
                                                                      cs_PTMSI_Signature (px_PTMSI_SigDef),
                                                                      cs_MobileIdTMSIorPTMSI ('18'O, px_PTMSI_Def),
                                                                      v_TMSI)));
    
    //Receive GPRS Attach Complete Message
    v_LLCDataInd := f_GPRS_ReceiveUplinkMsg (geran_Cell24, car_G_LLC_UnitData_IND (cr_G_AttachComplete));
    
    f_GERAN_TestBody_Set( false );
    
    // Test case now finished on GERAN side
    f_IRAT_SendCoOrd (EUTRA, cms_IRAT_Trigger);
    f_GERAN_Postamble ( geran_Cell24, G1_IDLE, PS_Only); // @sic R5s110176 sic@
  
  } // f_TC_9_2_1_1_11_GERAN

  function f_TC_9_2_1_1_12_GERAN () runs on GERAN_PTC
  { /* Test Purpose (see f_TC_9_2_1_1_12_EUTRA) */
    /* @sic R5-113696: pc_GERAN and px_RATComb_Tested are checked at top-level sic@ */
    
    f_GERAN_Init(EUTRA_GERAN); // This is still only a 2 PTC test @sic R5s110318 sic@

    f_GERAN_CreateCell(geran_Cell24);
    f_IRAT_WaitForCoOrd_Trigger (EUTRA); // @sic R5s110232 sic@
    f_GERAN_Pre_Preamble (geran_Cell24, PS_Only); // @sic R5s110176 sic@
    f_GERAN_InterRAT_InitialiseAuthParams();  // The UE starts in EUTRA, so wait for it to send the Auth Params
    f_GERAN_TestBody_Set( true );
    
    // Second Trigger
    //@siclog "Step 10a1" siclog@
    // Set Cell 5 to "Serving Cell"
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_ServingCell);
    
    //@siclog "Step 10a3" siclog@
    // Check: Does the UE transmit an ATTACH REQUEST message in the next 2 minutes?
    f_GERAN_CheckNoAttachOnCell ( geran_Cell24, 120.0, "Step 10a3" );
    
    //@siclog "Step 10a4" siclog@
    f_UT_TriggerAttach (UT);
    
    //@siclog "Step 10a5" siclog@
    // Check: Does the UE transmit an ATTACH REQUEST message in the next 30 seconds?
    f_GERAN_CheckNoAttachOnCell ( geran_Cell24, 30.0, "Step 10a5" );
    
    // Third Trigger
    //@siclog "Step 10a6" siclog@
    // Set Cell 24 to "Suitable Neighbour Cell"
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_ChPwrLvl_Off);// subject to prose CR approval; @sic R5s110151 sic@
    
    // Finished here for now
    f_IRAT_SendCoOrd (EUTRA, cms_IRAT_Trigger);
    
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    // Test case now finished on GERAN side
    f_GERAN_TestBody_Set( false );
    f_GERAN_SS_CellRelease ( geran_Cell24 );
    
  } // f_TC_9_2_1_1_12_GERAN

  function f_TC_9_2_1_2_1b_GERAN () runs on GERAN_PTC
  { // @desc Combined attach procedure / Success / SMS only

    var B3_Type v_UpdateType, v_AttachType;
    var G_LLC_DATAMESSAGE_IND v_LLCDataInd;
    var octetstring v_PLMN;
    var O1_Type v_RAC;
    var O2_Type v_LAC;
    var boolean v_DetachSent := false;
    var template (omit) MobileIdentity v_TMSI := omit;
    timer t_Wait;
    
    f_GERAN_Init(EUTRA_GERAN);
    v_PLMN := f_GERAN_PLMN_Get(geran_Cell24);
    v_RAC := f_GERAN_RAC_Get(geran_Cell24);
    v_LAC := f_GERAN_LAC_Get(geran_Cell24);
    
    f_GERAN_CreateCell (geran_Cell24);
    f_GERAN_InterRAT_InitialiseAuthParams();  // The UE starts in EUTRA, so wait for it to send the Auth Params
    f_GERAN_TestBody_Set( true );
    
    // First Trigger
    //@siclog "Step 1" siclog@
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_NonSuitableCell);
    
    // Second Trigger
    //@siclog "Step 2a3" siclog@
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_SuitableNeighbourCell);
    
    if (pc_CS_PS_voice_centric and px_UE_CS_PS_UsageSetting_Tested == VOICE_CENTRIC) {// @sic R5-122012 sic@
      f_IRAT_WaitForCoOrd_Trigger (EUTRA);
      // Just receive the message in first
      v_LLCDataInd := f_GPRS_ReceiveUplinkMsg (geran_Cell24, ?);
      // Now check to see if trigger's already been received
      t_Wait.start(0.0);
      alt { // @sic R5-122012 sic@
          [not v_DetachSent] EUTRA.receive(cmr_IRAT_Trigger)
           { // this message should have already been received
             v_DetachSent := true;
           }
          []t_Wait.timeout{} // this will finish instantly, but won't be processed before the trigger (if there's already one waiting)
      }
      //@siclog "Step 4b1" siclog@
      if (v_DetachSent) {
        if (match (v_LLCDataInd, car_G_LLC_UnitData_IND(cr_G_AttachReq_MSandUENetworkCap(cr_AttachType(?, (tsc_I_AttachTypeGPRSAtt, tsc_I_AttachTypeCombined)),
                                                                       cr_MobileIdAny(omit),
                                                                       cr_RAI(omit),
                                                                       ?,
                                                                       cr_MS_RadioAccessCapLVNotSupportEUTRA,
                                                                       omit)))) {  // @sic R5-123648 sic@
            f_GERAN_PreliminaryPass (__FILE__, __LINE__, "Step 4b1");
            v_AttachType := v_LLCDataInd.unit.msg.attReq.attachType.attachType;
            f_GERAN_SplitPGCycle_Set(geran_Cell24, v_LLCDataInd.unit.msg.attReq.drxParameter);
            f_GERAN_GPRS_Authentication (geran_Cell24);

            if (v_AttachType == tsc_I_AttachTypeCombined) { // @sic R5-123114 sic@
              v_TMSI := cs_MobileIdTMSIorPTMSI('23'O, px_TMSI_Def);
            }

            f_GPRS_SendDownlinkMsg(geran_Cell24, 1, cas_G_LLC_UnitData_Req (f_GERAN_TLLI_Get(geran_Cell24),
                                                                tsc_LLCSapi_GMM,
                                                                tsc_LLC_PM,
                                                                px_GSM_CipheringOnOff,
                                                                cs_G_AttachAccept (cs_GMM_AttachResult(v_AttachType),
                                                                                   cs_RAI(omit,
                                                                                          cs_LAI(omit, v_PLMN, v_LAC),
                                                                                          v_RAC),
                                                                                   cs_PTMSI_Signature (px_PTMSI_SigDef),
                                                                                   cs_MobileIdTMSIorPTMSI ('18'O, px_PTMSI_Def),
                                                                                   v_TMSI)));
    
            //Receive GPRS Attach Complete Message
            v_LLCDataInd := f_GPRS_ReceiveUplinkMsg (geran_Cell24, car_G_LLC_UnitData_IND (cr_G_AttachComplete));
        } else {
            f_GERAN_SetVerdictFailOrInconc(__FILE__, __LINE__, "Step 4b1");
        }
      //@siclog "Step 4a1" siclog@
      } else { // detach not sent
        if (match (v_LLCDataInd, car_G_LLC_UnitData_IND(cr_G_RA_UpdReqMSRadioAccessCap (cr_GMM_UpdateType,
                                                                         cr_RAI (omit),
                                                                         cr_PTMSI_SignatureAny ifpresent,
                                                                         ?,
                                                                         cr_MS_RadioAccessCapLVNotSupportEUTRA,
                                                                         omit)))) {   // @sic R5-123648 sic@
            v_UpdateType := f_UG_RauReq_GetUpdateValueForRauAcc(v_LLCDataInd.unit.msg.rauReq);
            f_GERAN_PreliminaryPass (__FILE__, __LINE__, "Step 4a1");
            f_GERAN_RAUWithoutRAUReq (geran_Cell24, v_UpdateType);
        } else {
            f_GERAN_SetVerdictFailOrInconc(__FILE__, __LINE__, "Step 4a1");
        }
      }
      f_IRAT_SendCoOrd (EUTRA, cms_IRAT_Trigger);
      // Test case now finished on GERAN side
      f_GERAN_TestBody_Set( false );
      f_GERAN_Postamble (geran_Cell24, G1_IDLE, NotSpecified);
      
    } else { // @sic R5-122012 sic@
      f_IRAT_WaitForCoOrd_Trigger (EUTRA); // @sic R5s110232 sic@
      f_GERAN_TestBody_Set( false );
      f_GERAN_SS_CellRelease (geran_Cell24);
    }
    
  } // f_TC_9_2_1_2_1b_GERAN

  function f_TC_9_2_1_2_5_GERAN () runs on GERAN_PTC
  { /* Test Purpose (see f_TC_9_2_1_2_5_EUTRA) */
    /* @sic R5-113805: pc_GERAN and px_RATComb_Tested are checked at top-level sic@ */

    f_GERAN_Init(EUTRA_GERAN);
    
    f_GERAN_CreateCell (geran_Cell24);
    f_IRAT_WaitForCoOrd_Trigger (EUTRA); // @sic R5s110232 sic@
    f_GERAN_Pre_Preamble (geran_Cell24, Combined); // @sic R5s110176 sic@
    f_GERAN_InterRAT_InitialiseAuthParams();  // The UE starts in EUTRA, so wait for it to send the Auth Params
    f_GERAN_TestBody_Set( true );
    
    fl_TC_9_2_1_2_5and7_Body_GERAN ();
    
    // Test case now finished on GERAN side
    f_GERAN_TestBody_Set( false );
    
    f_GERAN_SS_CellRelease (geran_Cell24);
    
  } // fl_TC_9_2_1_2_5_GERAN

  function f_TC_9_2_1_2_6_GERAN () runs on GERAN_PTC
  { /* Test Purpose (see f_TC_9_2_1_2_6_EUTRA) */
    /* @sic R5-113805: pc_GERAN and px_RATComb_Tested are checked at top-level sic@ */
    
    var octetstring v_PLMN;
    
    f_GERAN_Init(EUTRA_GERAN);
    v_PLMN := f_GERAN_PLMN_Get(geran_Cell24);
    
    f_GERAN_CreateCell (geran_Cell24);
    f_IRAT_WaitForCoOrd_Trigger (EUTRA); // @sic R5s110232 sic@
    f_GERAN_Pre_Preamble (geran_Cell24, Combined); // @sic R5s110176 sic@
    f_GERAN_InterRAT_InitialiseAuthParams();  // The UE starts in EUTRA, so wait for it to send the Auth Params
    f_GERAN_TestBody_Set( true );
    
    // First Trigger
    //@siclog "Step 1" siclog@
    // Set Cell 24 to "Non Suitable Cell"
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_NonSuitableCell);
    
    // Second Trigger
    //@siclog "Step 10a1" siclog@
    // Set Cell 24 to "Serving Cell"
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_ServingCell);
    
    //@siclog "Step 10a3" siclog@
    // Check: Does the UE transmit an ATTACH REQUEST message in the next 30 seconds?
    f_GERAN_CheckNoAttachOnCell (geran_Cell24, 30.0, "Step 10a3");
    
    //@siclog "Step 10a4 - 10a5 Void" siclog@
    
    //@siclog "Step 10a6" siclog@
    f_UT_SwitchOffUE (UT, false, CNF_REQUIRED); // @sic R5s1100395 sic@
    
    //  Switch on UE
    //@siclog "Step 10a7" siclog@
    f_UT_SwitchOnUE (UT, false);
    
    //@siclog "Step 10a8" siclog@
    // Check: Does the UE send an ATTACH REQUEST?
    f_GPRS_ReceiveUplinkMsg (geran_Cell24, car_G_LLC_UnitData_IND ( cr_G_AttachReqWithIMSI (cr_AttachType(?, tsc_I_AttachTypeCombined),
                                                                                            f_Imsi2MobileIdentity(px_IMSI_Def),
                                                                                            cr_RAI (omit, cr_LAI(omit, v_PLMN, 'FFFE'O), ?))));
    f_GERAN_PreliminaryPass (__FILE__, __LINE__, "Step 10a8");
    
    //@siclog "Step 11" siclog@
    // f_UT_SwitchOffUE (UT, false); @sic R5s110192 sic@
    
    //@siclog "Step 12" siclog@
    // Set Cell 24 to "Non Suitable Cell"
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_ChPwrLvl_Off);
    
    // Finished here for now
    f_IRAT_SendCoOrd (EUTRA, cms_IRAT_Trigger);
    
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    // Test case now finished on GERAN side
    f_GERAN_TestBody_Set( false );
    
    f_GERAN_SS_CellRelease (geran_Cell24);
    
  } // f_TC_9_2_1_2_6_GERAN

  function f_TC_9_2_1_2_7_GERAN () runs on GERAN_PTC
  { /* Test Purpose (see f_TC_9_2_1_2_7_EUTRA) */
    /* @sic R5-113805: pc_GERAN and px_RATComb_Tested are checked at top-level sic@ */

    f_GERAN_Init(EUTRA_GERAN);
    
    f_GERAN_CreateCell (geran_Cell24);
    f_IRAT_WaitForCoOrd_Trigger (EUTRA); // @sic R5s110232 sic@
    f_GERAN_Pre_Preamble (geran_Cell24, Combined); // @sic R5s110176 sic@
    f_GERAN_InterRAT_InitialiseAuthParams();  // The UE starts in EUTRA, so wait for it to send the Auth Params
    f_GERAN_TestBody_Set( true );
    
    fl_TC_9_2_1_2_5and7_Body_GERAN ();
    
    // Test case now finished on GERAN side
    f_GERAN_TestBody_Set( false );
    
    f_GERAN_SS_CellRelease (geran_Cell24);
    
  } // f_TC_9_2_1_2_7_GERAN

  function fl_TC_9_2_1_2_5and7_Body_GERAN () runs on GERAN_PTC
  {
    var octetstring v_PLMN := f_GERAN_PLMN_Get(geran_Cell24);
    
    // First Trigger
    //@siclog "Step 1" siclog@
    // Set Cell 24 to "Non Suitable Cell"
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_NonSuitableCell);
    
    // Second Trigger
    //@siclog "Step 8a1" siclog@
    // Set Cell 24 to "Serving Cell"
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_ServingCell);
    
    //@siclog "Step 8a3" siclog@
    // Check: Does the UE transmit an ATTACH REQUEST message in the next 30 seconds?
    f_GERAN_CheckNoAttachOnCell (geran_Cell24, 30.0, "Step 10a3");
    
    //@siclog "Step 8a4" siclog@
    //  The UE is powered off or switched off
    f_UT_SwitchOffUE(UT, false, CNF_REQUIRED); // @sic R5s1100395 sic@
    
    //  UE brought back to operation
    //@siclog "Step 8a5" siclog@
    f_UT_SwitchOnUE (UT, false);
    
    //@siclog "Step 8a6" siclog@
    // Check: Does the UE send an ATTACH REQUEST?
    f_GPRS_ReceiveUplinkMsg (geran_Cell24, car_G_LLC_UnitData_IND ( cr_G_AttachReqWithIMSI (cr_AttachType(?, tsc_I_AttachTypeCombined),
                                                                                            f_Imsi2MobileIdentity(px_IMSI_Def),
                                                                                            cr_RAI (omit, cr_LAI(omit, v_PLMN, 'FFFE'O), ?))));
    f_GERAN_PreliminaryPass (__FILE__, __LINE__, "Step 8a6");
    
    //@siclog "Step 9 Void" siclog@
    
    //@siclog "Step 10" siclog@
    // Set Cell 24 to "Non Suitable Cell"
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_ChPwrLvl_Off);
    f_IRAT_SendCoOrd (EUTRA, cms_IRAT_Trigger);
    
    f_IRAT_WaitForCoOrd_Trigger (EUTRA); // Test finished now
    
  } // end function fl_TC_9_2_1_2_5and7_Body_GERAN

  function f_TC_9_2_1_2_8_GERAN () runs on GERAN_PTC
  { /* Test Purpose (see f_TC_9_2_1_2_8_EUTRA) */
    /* @sic R5-113805: pc_GERAN and px_RATComb_Tested are checked at top-level sic@ */

    var G_L2_DATAMESSAGE_IND v_ChanReq;
    var G_L2_DATAMESSAGE_IND v_LocUpd;
    var octetstring v_PLMN;
    var O2_Type v_LAC;
    var B10_Type v_BCCH;
    var B3_Type v_BCC;
    var RFN v_RFN;
    var integer v_RR_RA;
    var G_LogicChType v_ChannelType;
    var SubChannelNumber v_SubChannel;
    
    var template (value) MobileIdentity v_MobileIdIMSI := f_Imsi2MobileIdentity(px_IMSI_Def);
    v_MobileIdIMSI.iei := '17'O; // Need to include iei in LUAccept, but function returns without iei
    
    f_GERAN_Init(EUTRA_GERAN);

    v_PLMN := f_GERAN_PLMN_Get(geran_Cell24);
    v_LAC := f_GERAN_LAC_Get(geran_Cell24);
    v_BCCH := f_GERAN_BCCHFreq_Get(geran_Cell24);
    v_BCC := f_GERAN_BCC_Get(geran_Cell24);
    
    f_GERAN_CreateCell (geran_Cell24);
    
    f_IRAT_WaitForCoOrd_Trigger (EUTRA); // @sic R5s110232 sic@
    f_GERAN_Pre_Preamble (geran_Cell24, Combined); // @sic R5s110176 sic@
    f_GERAN_InterRAT_InitialiseAuthParams();  // The UE starts in EUTRA, so wait for it to send the Auth Params
    f_GERAN_TestBody_Set( true );
    
    //@siclog "Step 1" siclog@
    //The SS configures: Cell 5 as a "Suitable neighbour cell".
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_SuitableNeighbourCell);
    
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    
    // IF pc_GERAN THEN the following messages are sent and shall be received on cell 24.
    //  Check: Does the UE transmit a LOCATION UPDATING REQUEST message on Cell 24? (1, P)
    //@siclog "Step 6a1 - 6a2" siclog@
    
    alt {
      [] G_L2.receive (car_G_L2_ACCESS_IND ( geran_Cell24, tsc_PhyCh0, tsc_RACH, ?, ?, cr_G_ChannelReq_Any ))
        -> value v_ChanReq
        {
          v_RFN := v_ChanReq.access.rfn;
          v_RR_RA := bit2int(v_ChanReq.access.burst.chReq.estCauRandomRef);
          G_L2.send (cas_G_L2_UNITDATA_REQ (geran_Cell24, tsc_PhyCh0, tsc_AGCH, 15, cs_G_RFN_Omit, cas_ImmAss(cs_ImmediateAssignment (v_BCCH, v_BCC, v_RR_RA, v_RFN, substr(oct2bit(f_GERAN_TA_Get(geran_Cell24)),1, 6))))); // @sic R5s120587, GP-110839 sic@
        }
    }
    alt {
      [] G_L2.receive (car_G_L2_Estab_IND (geran_Cell24, ?, ?, ?, cr_G_LocationUpdatingRequestIMSI))
        -> value v_LocUpd
        {
          f_GERAN_PreliminaryPass (__FILE__, __LINE__, "Step 6a2");
          v_ChannelType := v_LocUpd.sabm.g_LogicChType;
          v_SubChannel := v_LocUpd.sabm.subChannel;
        }
    }
    
    // @sic R5-121849 sic@
    G_L2.receive (car_G_L2_DATA_IND (geran_Cell24, ?, tsc_PhyCh0, ?, ?, ?, cr_G_ClassmarkChangeAny));
    if (pc_UTRA) { // @sic R5-123735 sic@
      G_L2.receive (car_G_L2_DATA_IND (geran_Cell24, ?, tsc_PhyCh0, ?, ?, ?, cr_G_UtranClassmarkChange));
    }
    //@siclog "Step 6a3 - 6a4" siclog@
    f_GERAN_MM_Authentication (geran_Cell24, v_ChannelType, v_SubChannel); // @sic R5-112622 sic@
    
    f_GERAN_Ciphering_Mode_Setting (geran_Cell24, tsc_PhyCh0, v_ChannelType, v_SubChannel); // @sic R5s120339 sic@
    
    //  The SS transmits a LOCATION UPDATING ACCEPT message with Location updating type = "IMSI attach" as specified in 3GPP TS 24.008.
    //@siclog "Step 6a5" siclog@
    G_L2.send (cas_G_L2_DATA_REQ (geran_Cell24, 0, tsc_PhyCh0, v_ChannelType, v_SubChannel, cs_G_RFN_Omit, cs_G_LocationUpdatingAccept ( v_PLMN, v_LAC, v_MobileIdIMSI )));
    
    // release channel
    f_G_ChannelRelease (geran_Cell24, tsc_PhyCh0, v_ChannelType, v_SubChannel);
    
    f_Delay (0.5); // @sic R5s120339 sic@
    // Test case now finished on GERAN side
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_NonSuitableCell);
    f_IRAT_SendCoOrd (EUTRA, cms_IRAT_Trigger); // Send trigger to EUTRA side
    f_GERAN_TestBody_Set( false );
    
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    
    f_GERAN_SS_CellRelease (geran_Cell24);
    
  } // f_TC_9_2_1_2_8_GERAN

  function f_TC_9_2_1_2_9_GERAN () runs on GERAN_PTC
  { /* Test Purpose (see f_TC_9_2_1_2_9_EUTRA) */
    /* @sic R5-113805: pc_GERAN and px_RATComb_Tested are checked at top-level sic@ */
    
    var octetstring v_PLMN := f_U_Asn2Nas_PlmnId({ mcc := {0, 0, 1},  mnc := {0, 2}}); // @sic R5s120325 sic@
    
    f_GERAN_Init(EUTRA_GERAN);
    
    f_GERAN_PLMN_Set (geran_Cell24, v_PLMN);
    
    f_GERAN_CreateCell (geran_Cell24);
    f_GERAN_InterRAT_InitialiseAuthParams();  // The UE starts in EUTRA, so wait for it to send the Auth Params
    f_GERAN_TestBody_Set( true );
    
    // First Trigger
    //@siclog "Step 9a1" siclog@
    // +   Set Cell 24 as the "Serving cell".
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_ServingCell);
    
    //+   The following messages are sent and shall be received on cell 24.
    //+   Check: Does the UE transmit an ATTACH REQUEST message in the next 30 seconds?
    //@siclog "Step 9a2 - 9a3" siclog@
    f_GERAN_CheckNoAttachOnCell (geran_Cell24, 30.0, "Step 9a3");
    
    //@siclog "Step 10" siclog@
    // +   Set Cell 24 as the "Non-Suitable off cell".
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_ChPwrLvl_Off);
    f_IRAT_SendCoOrd (EUTRA, cms_IRAT_Trigger);
    
    // Test case now finished on GERAN side
    f_GERAN_TestBody_Set( false );
    // So just wait for trigger to take down the cell
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    f_GERAN_SS_CellRelease ( geran_Cell24 );
    
  } // f_TC_9_2_1_2_9_GERAN

  function f_TC_9_2_1_2_11_GERAN () runs on GERAN_PTC
  { /* Test Purpose (see f_TC_9_2_1_2_11_EUTRA) */
    /* @sic R5-113805: pc_GERAN and px_RATComb_Tested are checked at top-level sic@ */

    var octetstring v_PLMN;
    
    f_GERAN_Init(EUTRA_GERAN);
    
    v_PLMN := f_GERAN_PLMN_Get(geran_Cell24);
    f_GERAN_CreateCell (geran_Cell24);
    f_IRAT_WaitForCoOrd_Trigger (EUTRA); // @sic R5s110232 sic@
    f_GERAN_Pre_Preamble (geran_Cell24, Combined); // @sic R5s110176 sic@
    f_GERAN_InterRAT_InitialiseAuthParams();  // The UE starts in EUTRA, so wait for it to send the Auth Params
    f_GERAN_TestBody_Set( true );
    
    //@siclog "Step 16a1" siclog@
    // Set Cell 24 to "Serving Cell"
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_SuitableNeighbourCell);
    
    //@siclog "Step 16a2" siclog@
    // Check: Does the UE transmit an ATTACH REQUEST message without P-TMSI, P-TMSI signature, RAI, TMSI
    f_GPRS_ReceiveUplinkMsg (geran_Cell24, car_G_LLC_UnitData_IND ( cr_G_AttachReqWithIMSI (cr_AttachType(?, tsc_I_AttachTypeCombined),
                                                                                            f_Imsi2MobileIdentity(px_IMSI_Def),
                                                                                            cr_RAI (omit, cr_LAI(omit, v_PLMN, 'FFFE'O), ?))));
    f_GERAN_PreliminaryPass (__FILE__, __LINE__, "Step 16a2");
    
    //@siclog "Step 16a3" siclog@
    // Send an ATTACH REJECT message with GMM Cause "Roaming not allowed in this location area"
    f_GPRS_SendDownlinkMsg (geran_Cell24, 1, cas_G_LLC_UnitData_Req (f_GERAN_TLLI_Get(geran_Cell24),
                                                                     tsc_LLCSapi_GMM,
                                                                     tsc_LLC_PM,
                                                                     '0'B, // @sic R5s120442 sic@
                                                                     cs_G_AttachReject('0D'O))); // cause 'Roaming not allowed in this location area'
    
    //@siclog "Step 17" siclog@
    f_UT_SwitchOffUE (UT, false, CNF_REQUIRED); // @sic R5s1100395 sic@
    
    //@siclog "Step 18" siclog@
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_ChPwrLvl_Off);
    // Finished here for now
    f_IRAT_SendCoOrd (EUTRA, cms_IRAT_Trigger);
    
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    // Test case now finished on GERAN side
    f_GERAN_TestBody_Set( false );
    f_GERAN_SS_CellRelease ( geran_Cell24 );
    
  } // f_TC_9_2_1_2_11_GERAN

  function f_TC_9_2_1_2_13_GERAN () runs on GERAN_PTC
  { /* Combined attach / Rejected / Roaming not allowed in this tracking area */
    /* Test Purpose (see f_TC_9_2_1_2_13_EUTRA) */
    /* @sic R5-113805: pc_GERAN and px_RATComb_Tested are checked at top-level sic@ */

    var octetstring v_PLMN := f_U_Asn2Nas_PlmnId({mcc:= {0,0,2}, mnc := {1,0,1}});
    
    f_GERAN_Init(EUTRA_GERAN);
    
    f_GERAN_PLMN_Set(geran_Cell24, v_PLMN);  // @sic R5s120507 sic@
    f_GERAN_CreateCell (geran_Cell24);
    
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    f_GERAN_Pre_Preamble (geran_Cell24, Combined); // @sic R5s110176 sic@
    f_GERAN_InterRAT_InitialiseAuthParams();  // The UE starts in EUTRA, so wait for it to send the Auth Params
    f_GERAN_TestBody_Set( true );
    
    //@siclog "Step 14a1" siclog@
    // Set Cell 24 to "Serving Cell"
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_ServingCell);
    
    //@siclog "Step 14a2" siclog@
    // Check: Does the UE transmit an ATTACH REQUEST message without P-TMSI, P-TMSI signature, RAI, TMSI
    f_GPRS_ReceiveUplinkMsg (geran_Cell24, car_G_LLC_UnitData_IND (cr_G_AttachReqWithIMSI(cr_AttachType(?, tsc_I_AttachTypeCombined),
                                                                                          f_Imsi2MobileIdentity(px_IMSI_Def),
                                                                                          cr_RAI (omit, cr_LAI(omit, v_PLMN, 'FFFE'O), ?))));
    f_GERAN_PreliminaryPass (__FILE__, __LINE__, "Step 14a2");
    
    //@siclog "Step 14a3" siclog@
    // Send an ATTACH REJECT message with GMM Cause "No Suitable Cells In Location Area"
    f_GPRS_SendDownlinkMsg(geran_Cell24, 1, cas_G_LLC_UnitData_Req (f_GERAN_TLLI_Get(geran_Cell24), tsc_LLCSapi_GMM, tsc_LLC_PM, '0'B, // @sic R5s120442 sic@
                                                                    cs_G_AttachReject('0F'O))); // cause 'No Suitable Cells In Location Area'
    
    //@siclog "Step 15" siclog@
    // Set Cell 24 to "Non Suitable Cell"
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_NonSuitableCell);
    
    // Finished here for now
    f_IRAT_SendCoOrd (EUTRA, cms_IRAT_Trigger);
    
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    // Test case now finished on GERAN side
    f_GERAN_TestBody_Set( false );
    
    f_GERAN_SS_CellRelease ( geran_Cell24 );
    
  } // f_TC_9_2_1_2_13_GERAN

  function f_TC_9_2_1_2_15_GERAN () runs on GERAN_PTC
  { /* Test Purpose (see f_TC_9_2_1_2_15_EUTRA) */
    /* @sic R5-113805: pc_GERAN and px_RATComb_Tested are checked at top-level sic@ */

    var octetstring v_PLMN;
    
    f_GERAN_Init(EUTRA_GERAN);
    
    v_PLMN := f_GERAN_PLMN_Get(geran_Cell24);
    f_GERAN_CreateCell (geran_Cell24);
    f_IRAT_WaitForCoOrd_Trigger (EUTRA); // @sic R5s110232 sic@
    f_GERAN_Pre_Preamble (geran_Cell24, Combined); // @sic R5s110176 sic@
    f_GERAN_InterRAT_InitialiseAuthParams();  // The UE starts in EUTRA, so wait for it to send the Auth Params
    f_GERAN_TestBody_Set( true );
    
    // First Trigger
    //@siclog "Step 1" siclog@
    // Set Cell 24 to "Non Suitable Cell"
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_NonSuitableCell);
    
    // Second Trigger
    //@siclog "Step 13a1" siclog@
    // Set Cell 24 to "Serving Cell"
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_ServingCell);
    
    //@siclog "Step 13a2" siclog@
    // Check: Does the UE transmit an ATTACH REQUEST message without P-TMSI, P-TMSI signature, RAI, TMSI
    f_GPRS_ReceiveUplinkMsg (geran_Cell24, car_G_LLC_UnitData_IND(cr_G_AttachReqWithIMSI(cr_AttachType(?, tsc_I_AttachTypeCombined),
                                                                                         f_Imsi2MobileIdentity(px_IMSI_Def),
                                                                                         cr_RAI (omit, cr_LAI(omit, v_PLMN, 'FFFE'O), ?))));
    f_GERAN_PreliminaryPass (__FILE__, __LINE__, "Step 13a2");
    
    //@siclog "Step 13A1" siclog@
    f_GERAN_SwitchPowerOff (geran_Cell24, Combined); // @sic R5-121763 sic@
    
    //@siclog "Step 14" siclog@
    // Set Cell 24 to "Non Suitable Cell Off";  @sic R5s110199 sic@
    f_GERAN_SetCellPowerLevel (geran_Cell24, tsc_GERAN_ChPwrLvl_Off);
    
    // Finished here for now
    f_IRAT_SendCoOrd (EUTRA, cms_IRAT_Trigger);
    
    f_IRAT_WaitForCoOrd_Trigger (EUTRA);
    // Test case now finished on GERAN side
    f_GERAN_TestBody_Set( false );
    f_GERAN_SS_CellRelease ( geran_Cell24 );
    
  } // f_TC_9_2_1_2_15_GERAN

}
